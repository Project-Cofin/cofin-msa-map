{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\Chat.js\";\nimport ChatBot from \"react-simple-chatbot\";\nimport React, { Component } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {\n      background: \"#f5f8fb\",\n      fontFamily: \"Helvetica Neue\",\n      headerBgColor: \"#EF6C00\",\n      headerFontColor: \"#fff\",\n      headerFontSize: \"15px\",\n      botBubbleColor: \"#EF6C00\",\n      botFontColor: \"#fff\",\n      userBubbleColor: \"#fff\",\n      userFontColor: \"#4a4a4a\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: [{\n        id: 'welcome',\n        message: '안녕하세요~ 코핀 챗봇이에요 궁금한 사항을 물어봐주세요',\n        trigger: 'userinput'\n      }, {\n        id: 'userinput',\n        user: true,\n        trigger: 'bot-response'\n      }, // {\n      //   id: 'bot-response',\n      //   message: '질문 내용이 {previousValue}(이)가 맞습니까?',\n      //   trigger: 'user-input'\n      // },\n      {\n        id: \"bot-response\",\n        component: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this),\n        asMessage: true,\n        trigger: 'userinput'\n      }],\n      botAvatar: require(\"./data/icon.png\").default,\n      userAvatar: require(\"./data/user.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chat;\nexport default Chat;\nexport class Post extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      steps\n    } = this.props;\n    const {\n      userinput\n    } = steps; // this.state = { submit, name, hobby };\n  }\n\n  componentDidMount() {\n    const userObject = {\n      submit: this.state.submit.value,\n      name: this.state.name.value,\n      hoby: this.state.hobby.value\n    };\n    console.log(`data: ${JSON.stringify(userObject)}`); // axios.post(`/api`, userObject)\n    // .then(res => {\n    //     console.log(res.status)\n    // }).catch(function(error) {\n    //     console.log(error);\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Thank you! I'll remember you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/chatbot/components/Chat.js"],"names":["ChatBot","React","Component","ThemeProvider","render","Chat","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","id","message","trigger","user","component","asMessage","require","default","Post","constructor","props","steps","userinput","componentDidMount","userObject","submit","state","value","name","hoby","hobby","console","log","JSON","stringify"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,SADP;AAELC,MAAAA,UAAU,EAAE,gBAFP;AAGLC,MAAAA,aAAa,EAAE,SAHV;AAILC,MAAAA,eAAe,EAAE,MAJZ;AAKLC,MAAAA,cAAc,EAAE,MALX;AAMLC,MAAAA,cAAc,EAAE,SANX;AAOLC,MAAAA,YAAY,EAAE,MAPT;AAQLC,MAAAA,eAAe,EAAE,MARZ;AASLC,MAAAA,aAAa,EAAE;AATV,KADT;AAAA,2BAaE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,SADN;AAEEC,QAAAA,OAAO,EAAE,gCAFX;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,WADN;AAEEG,QAAAA,IAAI,EAAE,IAFR;AAGED,QAAAA,OAAO,EAAE;AAHX,OANK,EAWL;AACA;AACA;AACA;AACA;AAEA;AACEF,QAAAA,EAAE,EAAE,cADN;AAEEI,QAAAA,SAAS,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFb;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEH,QAAAA,OAAO,EAAE;AAJX,OAjBK,CADT;AA0BE,MAAA,SAAS,EAAEI,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OA1BxC;AA2BE,MAAA,UAAU,EAAED,OAAO,CAAC,iBAAD,CAAP,CAA2BC;AA3BzC;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA9CD;;KAAMjB,I;AAgDN,eAAeA,IAAf;AAEA,OAAO,MAAMkB,IAAN,SAAmBrB,SAAnB,CAA6B;AAClCsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAgBD,KAAtB,CAHiB,CAKjB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,UAAU,GAAG;AACjBC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,KADT;AAEjBC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBD,KAFL;AAGjBE,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,KAAX,CAAiBH;AAHN,KAAnB;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQC,IAAI,CAACC,SAAL,CAAeV,UAAf,CAA2B,EAAhD,EANkB,CAOlB;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDzB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AA9BiC","sourcesContent":["import ChatBot from \"react-simple-chatbot\";\r\nimport React, { Component } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        background: \"#f5f8fb\",\r\n        fontFamily: \"Helvetica Neue\",\r\n        headerBgColor: \"#EF6C00\",\r\n        headerFontColor: \"#fff\",\r\n        headerFontSize: \"15px\",\r\n        botBubbleColor: \"#EF6C00\",\r\n        botFontColor: \"#fff\",\r\n        userBubbleColor: \"#fff\",\r\n        userFontColor: \"#4a4a4a\",\r\n      }}\r\n    >\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: 'welcome',\r\n            message: '안녕하세요~ 코핀 챗봇이에요 궁금한 사항을 물어봐주세요',\r\n            trigger: 'userinput',\r\n          },\r\n          {\r\n            id: 'userinput',\r\n            user: true,\r\n            trigger: 'bot-response'\r\n          },\r\n          // {\r\n          //   id: 'bot-response',\r\n          //   message: '질문 내용이 {previousValue}(이)가 맞습니까?',\r\n          //   trigger: 'user-input'\r\n          // },\r\n          \r\n          {\r\n            id: \"bot-response\",\r\n            component: <Post />,\r\n            asMessage: true,\r\n            trigger: 'userinput'\r\n          },\r\n          \r\n        ]}\r\n        botAvatar={require(\"./data/icon.png\").default}\r\n        userAvatar={require(\"./data/user.png\").default}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\nexport class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { userinput } = steps;\r\n\r\n    // this.state = { submit, name, hobby };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userObject = {\r\n      submit: this.state.submit.value,\r\n      name: this.state.name.value,\r\n      hoby: this.state.hobby.value,\r\n    };\r\n    console.log(`data: ${JSON.stringify(userObject)}`);\r\n    // axios.post(`/api`, userObject)\r\n    // .then(res => {\r\n    //     console.log(res.status)\r\n    // }).catch(function(error) {\r\n    //     console.log(error);\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>Thank you! I'll remember you.</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}