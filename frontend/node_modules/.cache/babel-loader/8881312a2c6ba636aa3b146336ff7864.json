{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Geolocation = () => {\n  _s();\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {// alert(position.coords.latitude + ' ' + position.coords.longitude);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n    }\n  }\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Geolocation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/components/Geolocation.js"],"names":["React","useEffect","Geolocation","getLocation","navigator","geolocation","getCurrentPosition","position","error","console","enableHighAccuracy","maximumAge","timeout","Infinity","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,WAASC,WAAT,GAAuB;AACnB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AAAE;AAC3BD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB,CAC1D;AACD,OAFD,EAEG,UAASC,KAAT,EAAgB;AACjBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAJD,EAIG;AACDE,QAAAA,kBAAkB,EAAE,KADnB;AAEDC,QAAAA,UAAU,EAAE,CAFX;AAGDC,QAAAA,OAAO,EAAEC;AAHR,OAJH;AASD,KAVD,MAUO;AACLC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF;;AAEHb,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAGA,sBAAO,qCAAP;AACH,CArBD;;GAAMD,W;;KAAAA,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nconst Geolocation = () => {\r\n    function getLocation() {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n          navigator.geolocation.getCurrentPosition(function(position) {\r\n            // alert(position.coords.latitude + ' ' + position.coords.longitude);\r\n          }, function(error) {\r\n            console.error(error);\r\n          }, {\r\n            enableHighAccuracy: false,\r\n            maximumAge: 0,\r\n            timeout: Infinity\r\n          });\r\n        } else {\r\n          alert('GPS를 지원하지 않습니다');\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        getLocation();\r\n    },[])\r\n    return(<></>)\r\n}\r\n\r\nexport default Geolocation"]},"metadata":{},"sourceType":"module"}