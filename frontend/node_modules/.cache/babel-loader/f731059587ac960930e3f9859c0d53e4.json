{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { mapAPI } from 'features/map';\n\nconst WORLD = async x => {\n  const res = await mapAPI.worldMap();\n  return res.data;\n}; // const EXIST = async (x) => {\n//   const res = await userAPI.exist(x)\n//   return res.data\n// }\n\n\n_c = WORLD;\nexport const worldMap = createAsyncThunk('/world', WORLD); // export const exist = createAsyncThunk('users/exist', EXIST)\n// export const modifyPage = createAsyncThunk('users/modify', userModifyPage)\n// export const removePage = createAsyncThunk('users/remove', userRemovePage)\n// // export const logout = () => {\n//   // window.localStorage.setItem('sessionUser','')\n//   // window.location.href='/home'\n// // }\n// const changeNull = ls =>{\n//   for(const i of ls ){\n//     document.getElementById(i).value = ''\n//   }\n// }\n\nconst mapSlice = createSlice({\n  name: 'maps',\n  initialState: {\n    mapState: {\n      id: '',\n      type: '',\n      shortName: '',\n      name: '',\n      lat: '',\n      long: '',\n      population: '',\n      cases: '',\n      medPointId: ''\n    },\n    mapsState: [],\n    type: '',\n    keyword: '',\n    params: {}\n  },\n  reducers: {},\n  extraReducers: {\n    [worldMap.fulfilled]: (state, action) => {\n      state.mapsState = action.payload; //   window.location.href = `/login`\n    } // [exist.fulfilled]: ( state, action ) => { \n    //   if(action.payload){window.location.href='/add'}\n    //   else{ alert(`사용가능함`) }\n    // },\n    // [detailPage.fulfilled]: ( state, {meta, payload} ) => { state.userState = payload },\n    // [listPage.fulfilled]: ( state, {meta, payload} ) => { state.usersState = payload },\n    // [loginPage.fulfilled]: ( state, {meta, payload} ) => {\n    //   state.userState = payload\n    //   window.localStorage.setItem('sessionUser', JSON.stringify(payload))\n    //   if(payload.username != null){\n    //     alert(`${payload.name}님 환영합니다`)\n    //     window.location.href = `/detail`\n    //   }else{\n    //     alert('아이디, 비번 오류로 로그인 실패  ')\n    //     changeNull(['username','password'])\n    //   }\n    // },\n\n  }\n}); // export const currentMapState = state => state.maps.mapState\n\nexport const currentMapsState = state => state.maps.mapsState; // export const currentMapParam = state => state.maps.param\n\nexport default mapSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WORLD\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/reducer/mapSlice.js"],"names":["createAsyncThunk","createSlice","mapAPI","WORLD","x","res","worldMap","data","mapSlice","name","initialState","mapState","id","type","shortName","lat","long","population","cases","medPointId","mapsState","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","currentMapsState","maps","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAOC,CAAP,IAAa;AACxB,QAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,QAAP,EAAlB;AACA,SAAOD,GAAG,CAACE,IAAX;AACF,CAHD,C,CAIA;AACA;AACA;AACA;;;KAPMJ,K;AAUN,OAAO,MAAMG,QAAQ,GAAGN,gBAAgB,CAAC,QAAD,EAAWG,KAAX,CAAjC,C,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMK,QAAQ,GAAGP,WAAW,CAAC;AAC3BQ,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAC,EADK;AACDC,MAAAA,IAAI,EAAC,EADJ;AACQC,MAAAA,SAAS,EAAC,EADlB;AACsBL,MAAAA,IAAI,EAAC,EAD3B;AAC+BM,MAAAA,GAAG,EAAE,EADpC;AACwCC,MAAAA,IAAI,EAAE,EAD9C;AACkDC,MAAAA,UAAU,EAAE,EAD9D;AACkEC,MAAAA,KAAK,EAAE,EADzE;AAC6EC,MAAAA,UAAU,EAAE;AADzF,KADE;AAIZC,IAAAA,SAAS,EAAE,EAJC;AAKZP,IAAAA,IAAI,EAAE,EALM;AAMZQ,IAAAA,OAAO,EAAE,EANG;AAOZC,IAAAA,MAAM,EAAE;AAPI,GAFa;AAW3BC,EAAAA,QAAQ,EAAE,EAXiB;AAY3BC,EAAAA,aAAa,EAAE;AACb,KAAClB,QAAQ,CAACmB,SAAV,GAAsB,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACzCD,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB,CADyC,CAE3C;AACC,KAJY,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBa;AAZY,CAAD,CAA5B,C,CAsCA;;AACA,OAAO,MAAMC,gBAAgB,GAAGH,KAAK,IAAIA,KAAK,CAACI,IAAN,CAAWV,SAA7C,C,CACP;;AACA,eAAeZ,QAAQ,CAACuB,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { mapAPI } from 'features/map';\r\n\r\nconst WORLD = async (x) => {\r\n   const res = await mapAPI.worldMap()\r\n   return res.data\r\n}\r\n// const EXIST = async (x) => {\r\n//   const res = await userAPI.exist(x)\r\n//   return res.data\r\n// }\r\n\r\n\r\nexport const worldMap = createAsyncThunk('/world', WORLD)\r\n// export const exist = createAsyncThunk('users/exist', EXIST)\r\n// export const modifyPage = createAsyncThunk('users/modify', userModifyPage)\r\n// export const removePage = createAsyncThunk('users/remove', userRemovePage)\r\n// // export const logout = () => {\r\n//   // window.localStorage.setItem('sessionUser','')\r\n//   // window.location.href='/home'\r\n// // }\r\n\r\n// const changeNull = ls =>{\r\n//   for(const i of ls ){\r\n//     document.getElementById(i).value = ''\r\n//   }\r\n// }\r\nconst mapSlice = createSlice({\r\n  name: 'maps',\r\n  initialState: {\r\n    mapState: {\r\n      id:'', type:'', shortName:'', name:'', lat: '', long: '', population: '', cases: '', medPointId: ''\r\n    },\r\n    mapsState: [],\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [worldMap.fulfilled]: ( state, action ) => { \r\n      state.mapsState = action.payload \r\n    //   window.location.href = `/login`\r\n    },\r\n    // [exist.fulfilled]: ( state, action ) => { \r\n    //   if(action.payload){window.location.href='/add'}\r\n    //   else{ alert(`사용가능함`) }\r\n    // },\r\n    // [detailPage.fulfilled]: ( state, {meta, payload} ) => { state.userState = payload },\r\n    // [listPage.fulfilled]: ( state, {meta, payload} ) => { state.usersState = payload },\r\n    // [loginPage.fulfilled]: ( state, {meta, payload} ) => {\r\n    //   state.userState = payload\r\n    //   window.localStorage.setItem('sessionUser', JSON.stringify(payload))\r\n    //   if(payload.username != null){\r\n    //     alert(`${payload.name}님 환영합니다`)\r\n    //     window.location.href = `/detail`\r\n    //   }else{\r\n    //     alert('아이디, 비번 오류로 로그인 실패  ')\r\n    //     changeNull(['username','password'])\r\n    //   }\r\n    // },\r\n    \r\n  }\r\n\r\n})\r\n// export const currentMapState = state => state.maps.mapState\r\nexport const currentMapsState = state => state.maps.mapsState\r\n// export const currentMapParam = state => state.maps.param\r\nexport default mapSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}