{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction LocalMap() {\n  _s();\n\n  var mapContainer = useRef(null),\n      // 지도를 표시할 div  \n  mapOption = {\n    center: new kakao.maps.LatLng(33.450701, 126.570667),\n    // 지도의 중심좌표\n    level: 3 // 지도의 확대 레벨\n\n  }; // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \n\n  var positions = [{\n    content: '<div>카카오</div>',\n    latlng: new kakao.maps.LatLng(33.450705, 126.570677)\n  }, {\n    content: '<div>생태연못</div>',\n    latlng: new kakao.maps.LatLng(33.450936, 126.569477)\n  }, {\n    content: '<div>텃밭</div>',\n    latlng: new kakao.maps.LatLng(33.450879, 126.569940)\n  }, {\n    content: '<div>근린공원</div>',\n    latlng: new kakao.maps.LatLng(33.451393, 126.570738)\n  }];\n\n  for (var i = 0; i < positions.length; i++) {\n    // 마커를 생성합니다\n    var marker = new kakao.maps.Marker({\n      map: map,\n      // 마커를 표시할 지도\n      position: positions[i].latlng // 마커의 위치\n\n    }); // 마커에 표시할 인포윈도우를 생성합니다 \n\n    var infowindow = new kakao.maps.InfoWindow({\n      content: positions[i].content // 인포윈도우에 표시할 내용\n\n    }); // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n    // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n\n    window.kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\n    window.kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\n  } // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n\n\n  function makeOverListener(map, marker, infowindow) {\n    return function () {\n      infowindow.open(map, marker);\n    };\n  } // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n\n\n  function makeOutListener(infowindow) {\n    return function () {\n      infowindow.close();\n    };\n  }\n\n  useEffect(() => {\n    new window.kakao.maps.Map(mapContainer.current, mapOption); //지도 생성 및 객체 리턴\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    style: {\n      width: \"500px\",\n      height: \"500px\"\n    },\n    ref: mapContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocalMap, \"6zcGo6SVCAaKoYrOkDL9zc4/xh8=\");\n\n_c = LocalMap;\nexport default LocalMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalMap\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/components/LocalMap.js"],"names":["React","useRef","useEffect","kakao","window","LocalMap","mapContainer","mapOption","center","maps","LatLng","level","positions","content","latlng","i","length","marker","Marker","map","position","infowindow","InfoWindow","event","addListener","makeOverListener","makeOutListener","open","close","Map","current","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nconst { kakao } = window;\r\n\r\n\r\nfunction LocalMap() {\r\n\r\n    var mapContainer = useRef(null), // 지도를 표시할 div  \r\n    mapOption = { \r\n        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n \r\n    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \r\n    var positions = [\r\n        {\r\n            content: '<div>카카오</div>', \r\n            latlng: new kakao.maps.LatLng(33.450705, 126.570677)\r\n        },\r\n        {\r\n            content: '<div>생태연못</div>', \r\n            latlng: new kakao.maps.LatLng(33.450936, 126.569477)\r\n        },\r\n        {\r\n            content: '<div>텃밭</div>', \r\n            latlng: new kakao.maps.LatLng(33.450879, 126.569940)\r\n        },\r\n        {\r\n            content: '<div>근린공원</div>',\r\n            latlng: new kakao.maps.LatLng(33.451393, 126.570738)\r\n        }\r\n    ];\r\n\r\n    for (var i = 0; i < positions.length; i ++) {\r\n        // 마커를 생성합니다\r\n        var marker = new kakao.maps.Marker({\r\n            map: map, // 마커를 표시할 지도\r\n            position: positions[i].latlng // 마커의 위치\r\n        });\r\n\r\n        // 마커에 표시할 인포윈도우를 생성합니다 \r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: positions[i].content // 인포윈도우에 표시할 내용\r\n        });\r\n\r\n        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n        // 이벤트 리스너로는 클로저를 만들어 등록합니다 \r\n        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n        window.kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        window.kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n    }\r\n\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n    function makeOverListener(map, marker, infowindow) {\r\n        return function() {\r\n            infowindow.open(map, marker);\r\n        };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n    function makeOutListener(infowindow) {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n\r\n  useEffect(() => {\r\n    new window.kakao.maps.Map(mapContainer.current, mapOption); //지도 생성 및 객체 리턴\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"map\"\r\n      style={{ width: \"500px\", height: \"500px\" }}\r\n      ref={mapContainer}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default LocalMap;"]},"metadata":{},"sourceType":"module"}