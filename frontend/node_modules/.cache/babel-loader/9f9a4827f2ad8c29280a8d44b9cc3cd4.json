{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { chatbot, chatbotAPI } from \"..\";\n\nconst ANSWER = async x => {\n  //  const res = await chatbotAPI.findAnswer(x)\n  console.log(`넘겨받은 페이로드: ${x}`); //  const res = await x\n\n  return res.data;\n}; // const EXIST = async (x) => {\n//   const res = await chatbotAPI.exist(x)\n//   return res.data\n// }\n\n\n_c = ANSWER;\nexport const answer = createAsyncThunk('/chat', ANSWER); // export const exist = createAsyncThunk('/chat', EXIST)\n\nconst chatbotSlice = createSlice({\n  name: 'bot',\n  initialState: {\n    botState: {\n      answer: ''\n    },\n    botsState: [],\n    type: '',\n    keyword: '',\n    params: {}\n  },\n  reducers: {},\n  extraReducers: {\n    [answer.fulfilled]: (state, action) => {\n      state.botState = action.payload;\n    }\n  }\n});\nexport const currentBotState = state => state.bot.botState;\nexport const currentBotsState = state => state.bot.botsState; // export const currentBotParam = state => state.bot.param\n\nexport default chatbotSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ANSWER\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/chatbot/reducer/chatbotSlice.js"],"names":["createAsyncThunk","createSlice","chatbot","chatbotAPI","ANSWER","x","console","log","res","data","answer","chatbotSlice","name","initialState","botState","botsState","type","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","currentBotState","bot","currentBotsState","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,IAApC;;AAEA,MAAMC,MAAM,GAAG,MAAOC,CAAP,IAAa;AAC1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaF,CAAE,EAA5B,EAF0B,CAG1B;;AACC,SAAOG,GAAG,CAACC,IAAX;AACF,CALD,C,CAMA;AACA;AACA;AACA;;;KATML,M;AAYN,OAAO,MAAMM,MAAM,GAAGV,gBAAgB,CAAC,OAAD,EAAUI,MAAV,CAA/B,C,CACP;;AAEA,MAAMO,YAAY,GAAGV,WAAW,CAAC;AAC/BW,EAAAA,IAAI,EAAE,KADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,MAAM,EAAE;AADF,KADE;AAIZK,IAAAA,SAAS,EAAE,EAJC;AAKZC,IAAAA,IAAI,EAAE,EALM;AAMZC,IAAAA,OAAO,EAAE,EANG;AAOZC,IAAAA,MAAM,EAAE;AAPI,GAFiB;AAW/BC,EAAAA,QAAQ,EAAE,EAXqB;AAY/BC,EAAAA,aAAa,EAAE;AACb,KAACV,MAAM,CAACW,SAAR,GAAoB,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACvCD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACD;AAHY;AAZgB,CAAD,CAAhC;AAoBA,OAAO,MAAMC,eAAe,GAAGH,KAAK,IAAIA,KAAK,CAACI,GAAN,CAAUZ,QAA3C;AACP,OAAO,MAAMa,gBAAgB,GAAGL,KAAK,IAAIA,KAAK,CAACI,GAAN,CAAUX,SAA5C,C,CACP;;AACA,eAAeJ,YAAY,CAACiB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { chatbot, chatbotAPI } from \"..\";\r\n\r\nconst ANSWER = async (x) => {\r\n  //  const res = await chatbotAPI.findAnswer(x)\r\n  console.log(`넘겨받은 페이로드: ${x}`)\r\n  //  const res = await x\r\n   return res.data\r\n}\r\n// const EXIST = async (x) => {\r\n//   const res = await chatbotAPI.exist(x)\r\n//   return res.data\r\n// }\r\n\r\n\r\nexport const answer = createAsyncThunk('/chat', ANSWER)\r\n// export const exist = createAsyncThunk('/chat', EXIST)\r\n\r\nconst chatbotSlice = createSlice({\r\n  name: 'bot',\r\n  initialState: {\r\n    botState: {\r\n        answer: ''\r\n    },\r\n    botsState: [],\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [answer.fulfilled]: ( state, action ) => { \r\n      state.botState = action.payload \r\n    },\r\n    \r\n  }\r\n\r\n})\r\nexport const currentBotState = state => state.bot.botState\r\nexport const currentBotsState = state => state.bot.botsState\r\n// export const currentBotParam = state => state.bot.param\r\nexport default chatbotSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}