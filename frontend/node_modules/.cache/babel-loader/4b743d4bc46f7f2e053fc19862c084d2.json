{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { medPoints } from \"../reducer/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction LocalMap() {\n  _s();\n\n  const med_points = useSelector(state => state.map.mapsState);\n  useEffect(() => {\n    var geoInfo = window.localStorage.getItem('sessionGeo').split(','); // alert(geoInfo)\n\n    console.log(med_points);\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div  \n    mapOption = {\n      // center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\n      center: new kakao.maps.LatLng(geoInfo[0], geoInfo[1]),\n      // 지도의 중심좌표\n      level: 5 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    var positions = med_points.map(x => {\n      return {\n        content: `<div style=\"padding:5px; border-radius: 15px;\">${x.name}</div>`,\n        latlng: new kakao.maps.LatLng(x.latitude, x.longitude)\n      };\n    });\n    positions = [...positions, {\n      content: `<div style=\"padding:0.3em 2em; border-radius: 15px;\">내 위치</div>`,\n      latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])\n    }];\n    console.log(positions); // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \n    // var positions = [\n    //     {\n    //         content: '<div style=\"padding:5px; border-radius: 15px;\">내 위치</div>', \n    //         latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])\n    //     },\n    //     {\n    //         content: '<div>카카오</div>', \n    //         latlng: new kakao.maps.LatLng(33.450705, 126.570677)\n    //     },\n    //     {\n    //         content: '<div>생태연못</div>', \n    //         latlng: new kakao.maps.LatLng(33.450936, 126.569477)\n    //     },\n    //     {\n    //         content: '<div>텃밭</div>', \n    //         latlng: new kakao.maps.LatLng(33.450879, 126.569940)\n    //     },\n    //     {\n    //         content: '<div>근린공원</div>',\n    //         latlng: new kakao.maps.LatLng(33.451393, 126.570738)\n    //     }\n    // ];\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        // 마커를 표시할 지도\n        position: positions[i].latlng // 마커의 위치\n\n      }); // 마커에 표시할 인포윈도우를 생성합니다 \n\n      var infowindow = new kakao.maps.InfoWindow({\n        content: positions[i].content // 인포윈도우에 표시할 내용\n\n      }); // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n      // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n\n      kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\n      kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\n      kakao.maps.event.addListener(marker, 'click', function () {\n        alert('hi!');\n      });\n    } // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n\n\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    } // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n\n\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    id: \"map\",\n    style: {\n      width: \"1000px\",\n      height: \"500px\",\n      float: \"left\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocalMap, \"p26goaxApszhlNPFbcwvtAQVFuM=\", false, function () {\n  return [useSelector];\n});\n\n_c = LocalMap;\nexport default LocalMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalMap\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/map/components/LocalMap.js"],"names":["React","useEffect","useDispatch","useSelector","medPoints","kakao","window","LocalMap","med_points","state","map","mapsState","geoInfo","localStorage","getItem","split","console","log","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","Map","positions","x","content","name","latlng","latitude","longitude","i","length","marker","Marker","position","infowindow","InfoWindow","event","addListener","makeOverListener","makeOutListener","alert","open","close","width","height","float"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { medPoints } from \"../reducer/mapSlice\";\r\nconst { kakao } = window;\r\n\r\n\r\nfunction LocalMap() {\r\n    const med_points = useSelector(state => state.map.mapsState)\r\n    \r\n    useEffect(() => {\r\n    var geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    // alert(geoInfo)\r\n    console.log(med_points)\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n    mapOption = { \r\n        // center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n        center: new kakao.maps.LatLng(geoInfo[0], geoInfo[1]), // 지도의 중심좌표\r\n        level: 5 // 지도의 확대 레벨\r\n    };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n    var positions = med_points.map(x => {return {content: `<div style=\"padding:5px; border-radius: 15px;\">${x.name}</div>`, \r\n                                                 latlng: new kakao.maps.LatLng(x.latitude, x.longitude)}})\r\n    positions = [...positions, {content: `<div style=\"padding:0.3em 2em; border-radius: 15px;\">내 위치</div>`, latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])}]\r\n    console.log(positions)\r\n    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \r\n    // var positions = [\r\n    //     {\r\n    //         content: '<div style=\"padding:5px; border-radius: 15px;\">내 위치</div>', \r\n    //         latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])\r\n    //     },\r\n    //     {\r\n    //         content: '<div>카카오</div>', \r\n    //         latlng: new kakao.maps.LatLng(33.450705, 126.570677)\r\n    //     },\r\n    //     {\r\n    //         content: '<div>생태연못</div>', \r\n    //         latlng: new kakao.maps.LatLng(33.450936, 126.569477)\r\n    //     },\r\n    //     {\r\n    //         content: '<div>텃밭</div>', \r\n    //         latlng: new kakao.maps.LatLng(33.450879, 126.569940)\r\n    //     },\r\n    //     {\r\n    //         content: '<div>근린공원</div>',\r\n    //         latlng: new kakao.maps.LatLng(33.451393, 126.570738)\r\n    //     }\r\n    // ];\r\n\r\n    for (var i = 0; i < positions.length; i ++) {\r\n        // 마커를 생성합니다\r\n        var marker = new kakao.maps.Marker({\r\n            map: map, // 마커를 표시할 지도\r\n            position: positions[i].latlng // 마커의 위치\r\n        });\r\n\r\n        // 마커에 표시할 인포윈도우를 생성합니다 \r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: positions[i].content // 인포윈도우에 표시할 내용\r\n        });\r\n\r\n        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n        // 이벤트 리스너로는 클로저를 만들어 등록합니다 \r\n        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n        kakao.maps.event.addListener(marker, 'click', function(){alert('hi!')})\r\n    }\r\n\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n    function makeOverListener(map, marker, infowindow) {\r\n        return function() {\r\n            infowindow.open(map, marker);\r\n        };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n    function makeOutListener(infowindow) {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"map\"\r\n      id=\"map\"\r\n      style={{ width: \"1000px\", height: \"500px\", float: \"left\"}}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default LocalMap;"]},"metadata":{},"sourceType":"module"}