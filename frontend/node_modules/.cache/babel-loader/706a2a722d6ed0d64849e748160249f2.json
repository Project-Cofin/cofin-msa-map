{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\Chat4.js\",\n    _s = $RefreshSig$();\n\nimport ChatBot from 'react-simple-chatbot';\nimport React, { useState, Component } from 'react';\nimport { ThemeProvider } from 'styled-components'; // all available props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#EF6C00',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\nexport class CheckBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = checkedState => event => {\n      this.setState(initialState => ({\n        [checkedState]: !this.state[checkedState]\n      }));\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      let checkArray = [];\n\n      for (var key in this.state) {\n        if (this.state[key] === true) {\n          checkArray.push(key);\n        }\n      }\n\n      let checkData = {\n        checkbox: checkArray.toString()\n      };\n      console.log(checkData);\n      this.triggetNext();\n    };\n\n    this.state = {\n      summer: false,\n      spring: false,\n      winter: false,\n      trigger: false\n    };\n    this.triggetNext = this.triggetNext.bind(this);\n  }\n\n  triggetNext() {\n    this.setState({\n      trigger: true\n    }, () => {\n      this.props.triggerNextStep();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#D7FFCC\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: this.onChange('summer'),\n            className: \"form-check-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), \"Summer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: this.onChange('winter'),\n            className: \"form-check-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), \"Winter\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: this.onChange('spring'),\n            className: \"form-check-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), \"Spring\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Chat4 = () => {\n  _s();\n\n  const {\n    text,\n    setText\n  } = useState(); // const text =  'Hi {previousValue}, nice to meet you!'\n  // console.log(text)\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: [{\n        id: '1',\n        message: 'What is your name?',\n        trigger: '2'\n      }, {\n        id: '2',\n        user: true,\n        trigger: '3'\n      }, {\n        id: '3',\n        message: 'Hi {previousValue}, nice to meet you!',\n        trigger: '4'\n      }, {\n        id: '4',\n        message: 'How may I help you?',\n        trigger: '5'\n      }, {\n        id: '5',\n        user: true,\n        trigger: '6'\n      }, {\n        id: '6',\n        message: \"I'm sorry, but I don't know {previousValue}.\",\n        trigger: '7'\n      }, {\n        id: '8',\n        component: /*#__PURE__*/_jsxDEV(CheckBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }, this),\n        waitAction: true,\n        end: true\n      }],\n      botAvatar: require(\"./data/icon.png\").default,\n      userAvatar: require(\"./data/user.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Chat4, \"K83G/xS3xHRxVlaFwl0Urf3EY04=\");\n\n_c = Chat4;\nexport default Chat4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat4\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/chatbot/components/Chat4.js"],"names":["ChatBot","React","useState","Component","ThemeProvider","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","CheckBox","constructor","props","onChange","checkedState","event","setState","initialState","state","onSubmit","e","preventDefault","checkArray","key","push","checkData","checkbox","toString","console","log","triggetNext","summer","spring","winter","trigger","bind","triggerNextStep","render","backgroundColor","Chat4","text","setText","id","message","user","component","waitAction","end","require","default"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\r\nimport React, { useState, Component } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\n// all available props\r\nconst theme = {\r\n  background: '#f5f8fb',\r\n  fontFamily: 'Helvetica Neue',\r\n  headerBgColor: '#EF6C00',\r\n  headerFontColor: '#fff',\r\n  headerFontSize: '15px',\r\n  botBubbleColor: '#EF6C00',\r\n  botFontColor: '#fff',\r\n  userBubbleColor: '#fff',\r\n  userFontColor: '#4a4a4a',\r\n};\r\n\r\nexport class CheckBox extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        summer: false,\r\n        spring: false,\r\n        winter: false,\r\n        trigger: false\r\n      };\r\n  this.triggetNext = this.triggetNext.bind(this);\r\n    }\r\n  onChange = (checkedState) => event => {\r\n      this.setState(initialState => ({\r\n        [checkedState]: !this.state[checkedState]\r\n      }));\r\n    }\r\n  onSubmit = async (e) => {\r\n      e.preventDefault();\r\n  let checkArray = [];\r\n      for (var key in this.state) {\r\n        if (this.state[key] === true) {\r\n          checkArray.push(key);\r\n        }\r\n      }\r\n  let checkData = {\r\n        checkbox: checkArray.toString()\r\n      };\r\n      \r\n      console.log(checkData);\r\n  this.triggetNext();\r\n    }\r\n  triggetNext() {\r\n      this.setState({ trigger: true }, () => {\r\n        this.props.triggerNextStep();\r\n      });\r\n    }\r\n  render() {\r\n      return (\r\n      <div style={{backgroundColor: \"#D7FFCC\"}}>\r\n        <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-check\">\r\n                <input type=\"checkbox\"\r\n                  onChange={this.onChange('summer')}\r\n                  className=\"form-check-input\"\r\n                />\r\n                Summer\r\n            </div>\r\n        \r\n            <div className=\"form-check\" >\r\n                <input type=\"checkbox\"\r\n                  onChange={this.onChange('winter')}\r\n                  className=\"form-check-input\"\r\n                />\r\n                Winter\r\n            </div>\r\n  <div className=\"form-check\" >\r\n                <input type=\"checkbox\"\r\n                  onChange={this.onChange('spring')}\r\n                  className=\"form-check-input\"\r\n                />\r\n                Spring\r\n            </div>\r\n  <div className=\"form-group\">\r\n              <button className=\"btn btn-success\" >\r\n              Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\nconst Chat4 = () => {\r\n    const { text, setText } = useState()\r\n    // const text =  'Hi {previousValue}, nice to meet you!'\r\n    // console.log(text)\r\n   \r\n  return(\r\n  <ThemeProvider theme={theme}>\r\n    <ChatBot\r\n  steps={[\r\n    {\r\n      id: '1',\r\n      message: 'What is your name?',\r\n      trigger: '2',\r\n    },\r\n    {\r\n      id: '2',\r\n      user: true,\r\n      trigger: '3'\r\n    },\r\n    {\r\n      id: '3',\r\n      message: 'Hi {previousValue}, nice to meet you!',\r\n      trigger: '4'\r\n    },\r\n    {\r\n        id: '4',\r\n        message: 'How may I help you?',\r\n        trigger: '5'\r\n    },\r\n    {\r\n        id: '5',\r\n        user: true,\r\n        trigger: '6'\r\n      },\r\n    {\r\n        id: '6',\r\n        message: \"I'm sorry, but I don't know {previousValue}.\",\r\n        trigger: '7'\r\n      },\r\n    {\r\n        id: '8',\r\n        component: <CheckBox />,\r\n        waitAction: true,\r\n        end: true\r\n      },\r\n  ]} \r\n  botAvatar={require(\"./data/icon.png\").default} \r\n  userAvatar={require(\"./data/user.png\").default}\r\n/>\r\n  </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Chat4"]},"metadata":{},"sourceType":"module"}