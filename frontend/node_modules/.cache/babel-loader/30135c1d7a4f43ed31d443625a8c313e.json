{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport ChatBot from \"react-simple-chatbot\";\nimport React, { Component, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { render } from \"@testing-library/react\";\nimport { useDispatch } from \"react-redux\";\nimport { answer } from \"../reducer/chatbotSlice\";\nimport { func } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {\n      background: \"#f5f8fb\",\n      fontFamily: \"Helvetica Neue\",\n      headerBgColor: \"#EF6C00\",\n      headerFontColor: \"#fff\",\n      headerFontSize: \"15px\",\n      botBubbleColor: \"#EF6C00\",\n      botFontColor: \"#fff\",\n      userBubbleColor: \"#fff\",\n      userFontColor: \"#4a4a4a\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: [{\n        id: 'welcome',\n        message: '안녕하세요~ 코핀 챗봇이에요 궁금한 사항을 물어봐주세요',\n        trigger: 'userinput'\n      }, {\n        id: 'userinput',\n        user: true,\n        trigger: 'bot-response'\n      }, // {\n      //   id: 'bot-response',\n      //   message: '질문 내용이 {previousValue}(이)가 맞습니까?',\n      //   trigger: 'user-input'\n      // },\n      {\n        id: \"bot-response\",\n        component: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this),\n        asMessage: true,\n        trigger: 'userinput'\n      }],\n      botAvatar: require(\"./data/icon.png\").default,\n      userAvatar: require(\"./data/user.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Chat;\n;\nexport function Post(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [text, setText] = useState(''); // const { text, setText } = useState()\n  // setText(props.steps.userinput.value)\n  // console.log(props.steps.userinput.value)\n  // const ask = props.steps.userinput.value\n  // dispatch(answer(ask))\n\n  function a() {\n    setText('props.steps.userinput.value');\n    return text;\n  }\n\n  a();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \"\\uC774(\\uAC00) \\uB77C\\uACE0 \\uBB3C\\uC5B4\\uBCF4\\uC2E0 \\uAC83\\uC774 \\uB9DE\\uC2B5\\uB2C8\\uAE4C?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // export class Post extends Component {\n//   constructor(props) {\n//     super(props);\n//     const { steps } = this.props;\n//     const { userinput } = steps;\n//     this.state = { userinput };\n//   }\n//   componentDidMount() {\n//     const userObject = {\n//       submit: this.state.userinput.value,\n//     };\n//     console.log(`data: ${userObject.submit}`);\n//     // axios.post(`/api`, userObject)\n//     // .then(res => {\n//     //     console.log(res.status)\n//     // }).catch(function(error) {\n//     //     console.log(error);\n//     // });\n//   }\n//   render() {\n//     return (\n//       <>\n//         <div>{this.state.userinput.value}(이)라고 입력하셨습니다.</div>\n//       </>\n//     );\n//   }\n// }\n\n_s(Post, \"Bpyaj45ir/8fXnblBvu/5c39FYo=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/chatbot/components/Chat.js"],"names":["ChatBot","React","Component","useState","ThemeProvider","render","useDispatch","answer","func","Chat","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","id","message","trigger","user","component","asMessage","require","default","Post","props","dispatch","text","setText","a"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,SADP;AAELC,MAAAA,UAAU,EAAE,gBAFP;AAGLC,MAAAA,aAAa,EAAE,SAHV;AAILC,MAAAA,eAAe,EAAE,MAJZ;AAKLC,MAAAA,cAAc,EAAE,MALX;AAMLC,MAAAA,cAAc,EAAE,SANX;AAOLC,MAAAA,YAAY,EAAE,MAPT;AAQLC,MAAAA,eAAe,EAAE,MARZ;AASLC,MAAAA,aAAa,EAAE;AATV,KADT;AAAA,2BAaE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,SADN;AAEEC,QAAAA,OAAO,EAAE,gCAFX;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,WADN;AAEEG,QAAAA,IAAI,EAAE,IAFR;AAGED,QAAAA,OAAO,EAAE;AAHX,OANK,EAWL;AACA;AACA;AACA;AACA;AAEA;AACEF,QAAAA,EAAE,EAAE,cADN;AAEEI,QAAAA,SAAS,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFb;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEH,QAAAA,OAAO,EAAE;AAJX,OAjBK,CADT;AA0BE,MAAA,SAAS,EAAEI,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OA1BxC;AA2BE,MAAA,UAAU,EAAED,OAAO,CAAC,iBAAD,CAAP,CAA2BC;AA3BzC;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;KA9CuBjB,I;AA8CvB;AAED,OAAO,SAASkB,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AACzB,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAM,CAAEwB,IAAF,EAAQC,OAAR,IAAmB5B,QAAQ,CAAC,EAAD,CAAjC,CAFyB,CAGzB;AACA;AACE;AACA;AACA;;AACA,WAAS6B,CAAT,GAAY;AAAED,IAAAA,OAAO,CAAC,6BAAD,CAAP;AACV,WAAOD,IAAP;AACD;;AACHE,EAAAA,CAAC;AACD,sBACE;AAAA,2BACA;AAAA,iBAAMF,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAMH,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAjDgBH,I;UACGrB,W;;;MADHqB,I","sourcesContent":["import ChatBot from \"react-simple-chatbot\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { answer } from \"../reducer/chatbotSlice\";\r\nimport { func } from \"prop-types\";\r\n\r\nexport default function Chat() {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        background: \"#f5f8fb\",\r\n        fontFamily: \"Helvetica Neue\",\r\n        headerBgColor: \"#EF6C00\",\r\n        headerFontColor: \"#fff\",\r\n        headerFontSize: \"15px\",\r\n        botBubbleColor: \"#EF6C00\",\r\n        botFontColor: \"#fff\",\r\n        userBubbleColor: \"#fff\",\r\n        userFontColor: \"#4a4a4a\",\r\n      }}\r\n    >\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: 'welcome',\r\n            message: '안녕하세요~ 코핀 챗봇이에요 궁금한 사항을 물어봐주세요',\r\n            trigger: 'userinput',\r\n          },\r\n          {\r\n            id: 'userinput',\r\n            user: true,\r\n            trigger: 'bot-response'\r\n          },\r\n          // {\r\n          //   id: 'bot-response',\r\n          //   message: '질문 내용이 {previousValue}(이)가 맞습니까?',\r\n          //   trigger: 'user-input'\r\n          // },\r\n          \r\n          {\r\n            id: \"bot-response\",\r\n            component: <Post />,\r\n            asMessage: true,\r\n            trigger: 'userinput'\r\n          },\r\n          \r\n        ]}\r\n        botAvatar={require(\"./data/icon.png\").default}\r\n        userAvatar={require(\"./data/user.png\").default}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport function Post(props){\r\n  const dispatch = useDispatch()\r\n  const [ text, setText] = useState('')\r\n  // const { text, setText } = useState()\r\n  // setText(props.steps.userinput.value)\r\n    // console.log(props.steps.userinput.value)\r\n    // const ask = props.steps.userinput.value\r\n    // dispatch(answer(ask))\r\n    function a(){ setText('props.steps.userinput.value')\r\n        return text\r\n      }\r\n    a()\r\n    return (\r\n      <>\r\n      <div>{text}이(가) 라고 물어보신 것이 맞습니까?</div>\r\n        {/* <div>{this.state.userinput.value}(이)라고 입력하셨습니다.</div> */}\r\n      </>\r\n    );\r\n}\r\n\r\n// export class Post extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     const { steps } = this.props;\r\n//     const { userinput } = steps;\r\n\r\n//     this.state = { userinput };\r\n//   }\r\n  \r\n//   componentDidMount() {\r\n//     const userObject = {\r\n//       submit: this.state.userinput.value,\r\n//     };\r\n//     console.log(`data: ${userObject.submit}`);\r\n//     // axios.post(`/api`, userObject)\r\n//     // .then(res => {\r\n//     //     console.log(res.status)\r\n//     // }).catch(function(error) {\r\n//     //     console.log(error);\r\n//     // });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <div>{this.state.userinput.value}(이)라고 입력하셨습니다.</div>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}