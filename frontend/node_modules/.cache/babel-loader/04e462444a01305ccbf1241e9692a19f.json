{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\WorldMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { WorldMap } from 'react-svg-worldmap';\nimport styled from 'styled-components';\nimport { worldMap } from \"features/map/reducer/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function World() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    wmap,\n    setWmap,\n    maps,\n    setMaps\n  } = useState({\n    country: '',\n    value: ''\n  }, []);\n  const list = useSelector(state => state.map.mapsState);\n  useEffect(() => {\n    dispatch(worldMap());\n    list.forEach(element => {\n      setWmap({\n        country: element.name,\n        value: element.cases\n      });\n      setMaps(...maps, wmap);\n    });\n    console.log(maps);\n  }, []);\n  const data = [{\n    country: \"in\",\n    value: 32857937\n  }, // india\n  {\n    country: \"us\",\n    value: 40330712\n  }, // united states\n  {\n    country: \"br\",\n    value: 20804215\n  }, // brazil\n  {\n    country: \"ru\",\n    value: 6937333\n  }, // russia\n  {\n    country: \"gb\",\n    value: 6825074\n  }, // UK\n  {\n    country: \"fr\",\n    value: 6783329\n  }, // france\n  {\n    country: \"tr\",\n    value: 6412277\n  }, // turkey\n  {\n    country: \"ar\",\n    value: 5190948\n  }, // Argentina\n  {\n    country: \"ir\",\n    value: 5025233\n  }, // Iran\n  {\n    country: \"co\",\n    value: 4911082\n  }, // Colombia\n  {\n    country: \"kr\",\n    value: 255401\n  } // korea\n  ];\n\n  const stylingFunction = ({\n    countryValue,\n    minValue,\n    maxValue,\n    country,\n    color\n  }) => {\n    const opacityLevel = 0.1 + 1.5 * (countryValue - minValue) / (maxValue - minValue);\n    return {\n      // fill: country === 'US' ? 'blue' : color,\n      fill: countryValue < 300000 ? 'green' : color,\n      fillOpacity: opacityLevel,\n      stroke: 'brown',\n      strokeWidth: 1,\n      strokeOpacity: 0.2,\n      cursor: 'pointer'\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WorldMapDiv, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(WorldMap, {\n        color: \"red\",\n        title: \"Top 10 Coronavirus Rates\",\n        \"value-suffix\": \"people\",\n        size: \"xxl\",\n        data: data,\n        frame: true,\n        styleFunction: stylingFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(World, \"K6pMMUeS26EvOF896AMov/YfT3E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = World;\nconst WorldMapDiv = styled.div`\n  text-align: center;\n`;\n_c2 = WorldMapDiv;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"World\");\n$RefreshReg$(_c2, \"WorldMapDiv\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/components/WorldMap.js"],"names":["React","useEffect","useState","useDispatch","useSelector","WorldMap","styled","worldMap","World","dispatch","wmap","setWmap","maps","setMaps","country","value","list","state","map","mapsState","forEach","element","name","cases","console","log","data","stylingFunction","countryValue","minValue","maxValue","color","opacityLevel","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","cursor","WorldMapDiv","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n  const dispatch = useDispatch()\r\n  const { wmap, setWmap, maps, setMaps } = useState({\r\n    country: '', value: ''\r\n  }, [])\r\n  const list = useSelector(state => state.map.mapsState)\r\n\r\n  useEffect(()=>{\r\n    dispatch(worldMap())\r\n    list.forEach(element => {\r\n      setWmap({country: element.name, value: element.cases})\r\n      setMaps(...maps, wmap)\r\n    });\r\n    console.log(maps)\r\n  },[])\r\n\r\n  const data =\r\n    [\r\n      { country: \"in\", value: 32857937 }, // india\r\n      { country: \"us\", value: 40330712 },  // united states\r\n      { country: \"br\", value: 20804215 },  // brazil\r\n      { country: \"ru\", value: 6937333 },  // russia\r\n      { country: \"gb\", value: 6825074 },   // UK\r\n      { country: \"fr\", value: 6783329 },   // france\r\n      { country: \"tr\", value: 6412277 },   // turkey\r\n      { country: \"ar\", value: 5190948 },   // Argentina\r\n      { country: \"ir\", value: 5025233 },   // Iran\r\n      { country: \"co\", value: 4911082 },   // Colombia\r\n\r\n      { country: \"kr\", value: 255401 }   // korea\r\n    ]\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel =\r\n          0.1 + (1.5 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" data={data} frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>)\r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`"]},"metadata":{},"sourceType":"module"}