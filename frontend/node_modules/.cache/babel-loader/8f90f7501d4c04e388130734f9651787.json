{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\ChatModules.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { answer } from \"../reducer/chatbotSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Ask(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [text, setText] = useState();\n  console.log(props.steps);\n  useEffect(() => {\n    setText(props.steps.userinput.value);\n    dispatch(answer(props.steps.userinput.value));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \"\\uC774(\\uAC00) \\uB77C\\uACE0 \\uC9C8\\uBB38\\uD558\\uC2E0 \\uAC83\\uC774 \\uB9DE\\uC2B5\\uB2C8\\uAE4C?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), text == \"체크리스트\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.triggerNextStep({\n        trigger: 'fever'\n      }),\n      style: {\n        border: \"0.5px\",\n        background: 'burlywood',\n        borderRadius: \"9px\",\n        margin: \"1em 2em 5px 2em\",\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 3px 1px #cbbab0\"\n      },\n      children: \"\\uBC31\\uC2E0 \\uC811\\uC885 \\uC99D\\uC0C1 \\uCCB4\\uD06C\\uD558\\uAE30!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Ask, \"kncw4zVS1qrrk83l+incYtYZERc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Ask;\nexport function CheckStatus(props) {\n  _s2();\n\n  const dispatch = useDispatch();\n  const pain_arr = ['fever', 'ino_area', 'swell', 'sick', 'pain', 'fatigue', 'allergy', 'etc', 'welcome'];\n  const symptom = props.previousStep.value.slice(0, -1);\n  const choice = useSelector(state => state.chatbot.healthStates[symptom]);\n  useEffect(() => {\n    dispatch(answerStatus({\n      'symptom': symptom,\n      'details': props.previousStep.message\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: choice['answer']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        border: \"0.5px\",\n        background: 'burlywood',\n        borderRadius: \"9px\",\n        margin: \"0.7em auto\",\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 3px 1px #cbbab0\",\n        width: \"10em\",\n        display: \"block\"\n      },\n      onClick: () => {\n        try {\n          if (props.previousStep.value.slice(-1) > 2) {\n            window.localStorage.setItem(\"counter\", localStorage.getItem(\"counter\") + 1);\n          }\n\n          props.triggerNextStep({\n            trigger: pain_arr[pain_arr.indexOf(symptom) + 1]\n          });\n        } catch (error) {}\n      },\n      children: \"\\uC774\\uC5B4\\uC11C \\uC9C4\\uD589\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        border: \"0.5px\",\n        background: 'burlywood',\n        borderRadius: \"9px\",\n        margin: \"0.5em auto\",\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 3px 1px #cbbab0\",\n        width: \"10em\",\n        display: \"block\"\n      },\n      onClick: () => {\n        if (props.previousStep.value.slice(-1) > 2) {\n          window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\")) + 1);\n        }\n\n        props.triggerNextStep({\n          trigger: 'alert'\n        });\n      },\n      children: \"\\uADF8\\uB9CC\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(CheckStatus, \"5Qf/V5CFkJYpWSp5ZVXefpJWkqM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = CheckStatus;\nexport function AlertMessage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: localStorage.getItem(\"counter\") == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC8FC\\uC694 \\uC774\\uC0C1 \\uBC18\\uC751\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC8FC\\uC694 \\uC774\\uC0C1 \\uBC18\\uC751\\uC774 '\", localStorage.getItem(\"counter\"), \"' \\uAC74 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAC00\\uAE4C\\uC6B4 \\uC758\\uB8CC\\uAE30\\uAD00\\uC5D0 \\uBC29\\uBB38\\uD558\\uC2DC\\uAE30\\uB97C \\uCD94\\uCC9C\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c3 = AlertMessage;\nexport function ResetMessage() {\n  localStorage.setItem(\"counter\", 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB610 \\uB2E4\\uB978 \\uAD81\\uAE08\\uD558\\uC2E0 \\uBD80\\uBD84\\uC774 \\uC788\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c4 = ResetMessage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Ask\");\n$RefreshReg$(_c2, \"CheckStatus\");\n$RefreshReg$(_c3, \"AlertMessage\");\n$RefreshReg$(_c4, \"ResetMessage\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/chatbot/components/ChatModules.js"],"names":["useEffect","useState","useDispatch","useSelector","answer","Ask","props","dispatch","text","setText","console","log","steps","userinput","value","triggerNextStep","trigger","border","background","borderRadius","margin","cursor","boxShadow","CheckStatus","pain_arr","symptom","previousStep","slice","choice","state","chatbot","healthStates","answerStatus","message","width","display","window","localStorage","setItem","getItem","indexOf","error","parseInt","AlertMessage","ResetMessage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { answer } from \"../reducer/chatbotSlice\"\r\n\r\nexport function Ask(props){\r\n    const dispatch = useDispatch()\r\n    const [ text, setText] = useState()\r\n    console.log(props.steps)\r\n    useEffect(()=>{\r\n      setText(props.steps.userinput.value)\r\n      dispatch(answer(props.steps.userinput.value))\r\n    },[text])\r\n      return (\r\n        <>\r\n        <div>{text}이(가) 라고 질문하신 것이 맞습니까?</div>\r\n        {text == \"체크리스트\" ? <button onClick={() => props.triggerNextStep({trigger: 'fever'})} \r\n        style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"1em 2em 5px 2em\", cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\"}} >\r\n          백신 접종 증상 체크하기!\r\n        </button>: <></>}\r\n        </>\r\n      );\r\n  }\r\n  \r\n  \r\n  export function CheckStatus(props){\r\n    const dispatch = useDispatch()\r\n    const pain_arr = ['fever', 'ino_area', 'swell', 'sick', 'pain', 'fatigue', 'allergy', 'etc', 'welcome']\r\n    const symptom = props.previousStep.value.slice(0, -1)\r\n    const choice = useSelector((state)=>state.chatbot.healthStates[symptom])\r\n    useEffect(()=>{\r\n      dispatch(answerStatus({'symptom': symptom, 'details':props.previousStep.message}))\r\n    },[])\r\n      return (\r\n        <>\r\n        <div>{choice['answer']}</div>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.7em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  try {\r\n                    if(props.previousStep.value.slice(-1)>2){\r\n                      window.localStorage.setItem(\"counter\", localStorage.getItem(\"counter\")+1)\r\n                    }\r\n                    props.triggerNextStep({trigger: pain_arr[pain_arr.indexOf(symptom)+1]})\r\n                  } catch (error) {\r\n                  }\r\n                }}>\r\n          이어서 진행하기\r\n        </button>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.5em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  if(props.previousStep.value.slice(-1)>2){\r\n                    window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                  }\r\n                  props.triggerNextStep({trigger: 'alert'})\r\n                }}>\r\n          그만하기\r\n        </button>\r\n        </>\r\n      );\r\n  }\r\n  \r\n  export function AlertMessage(){\r\n    return(<>\r\n    {\r\n      localStorage.getItem(\"counter\") == 0\r\n      ? <div>주요 이상 반응이 없습니다.</div>\r\n      : <div>주요 이상 반응이 '{localStorage.getItem(\"counter\")}' 건 있습니다. 가까운 의료기관에 방문하시기를 추천드립니다.</div>\r\n    }\r\n    </>)\r\n  }\r\n  \r\n  export function ResetMessage(){\r\n    localStorage.setItem(\"counter\", 0)\r\n    return(<>\r\n      <div>\r\n        또 다른 궁금하신 부분이 있나요?\r\n      </div>\r\n    </>)\r\n  }"]},"metadata":{},"sourceType":"module"}