{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\components\\\\footer\\\\sub-components\\\\SubscribeEmail.js\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated\n}) => {\n  let email;\n\n  const submit = () => {\n    email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n    let emailInput = document.getElementById(\"mc-form-email\");\n    emailInput.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscribe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mc-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"mc-form-email\",\n          className: \"email\",\n          ref: node => email = node,\n          type: \"email\",\n          placeholder: \"Enter your email address...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: submit,\n          children: \"SUBSCRIBE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), status === \"sending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#3498db\",\n        fontSize: \"12px\"\n      },\n      children: \"sending...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#e74c3c\",\n        fontSize: \"12px\"\n      },\n      dangerouslySetInnerHTML: {\n        __html: message\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#2ecc71\",\n        fontSize: \"12px\"\n      },\n      dangerouslySetInnerHTML: {\n        __html: message\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomForm;\n\nconst SubscribeEmail = ({\n  mailchimpUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MailchimpSubscribe, {\n      url: mailchimpUrl,\n      render: ({\n        subscribe,\n        status,\n        message\n      }) => /*#__PURE__*/_jsxDEV(CustomForm, {\n        status: status,\n        message: message,\n        onValidated: formData => subscribe(formData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SubscribeEmail;\nSubscribeEmail.propTypes = {\n  mailchimpUrl: PropTypes.string\n};\nexport default SubscribeEmail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomForm\");\n$RefreshReg$(_c2, \"SubscribeEmail\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/components/footer/sub-components/SubscribeEmail.js"],"names":["PropTypes","React","MailchimpSubscribe","CustomForm","status","message","onValidated","email","submit","value","indexOf","EMAIL","emailInput","document","getElementById","node","color","fontSize","__html","SubscribeEmail","mailchimpUrl","subscribe","formData","propTypes","string"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nconst CustomForm = ({ status, message, onValidated }) => {\n  let email;\n  const submit = () => {\n    email &&\n      email.value.indexOf(\"@\") > -1 &&\n      onValidated({\n        EMAIL: email.value\n      });\n\n    let emailInput = document.getElementById(\"mc-form-email\");\n    emailInput.value = \"\";\n  };\n\n  return (\n    <div className=\"subscribe-form\">\n      <div className=\"mc-form\">\n        <div>\n          <input\n            id=\"mc-form-email\"\n            className=\"email\"\n            ref={node => (email = node)}\n            type=\"email\"\n            placeholder=\"Enter your email address...\"\n          />\n        </div>\n        <div className=\"clear\">\n          <button className=\"button\" onClick={submit}>\n            SUBSCRIBE\n          </button>\n        </div>\n      </div>\n\n      {status === \"sending\" && (\n        <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>sending...</div>\n      )}\n      {status === \"error\" && (\n        <div\n          style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\n          dangerouslySetInnerHTML={{ __html: message }}\n        />\n      )}\n      {status === \"success\" && (\n        <div\n          style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\n          dangerouslySetInnerHTML={{ __html: message }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst SubscribeEmail = ({ mailchimpUrl }) => {\n  return (\n    <div>\n      <MailchimpSubscribe\n        url={mailchimpUrl}\n        render={({ subscribe, status, message }) => (\n          <CustomForm\n            status={status}\n            message={message}\n            onValidated={formData => subscribe(formData)}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nSubscribeEmail.propTypes = {\n  mailchimpUrl: PropTypes.string\n};\n\nexport default SubscribeEmail;\n"]},"metadata":{},"sourceType":"module"}