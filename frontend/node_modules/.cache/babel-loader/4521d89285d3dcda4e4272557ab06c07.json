{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\Chat4.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components'; // all available props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#EF6C00',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nconst Chat4 = () => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: [{\n        id: 'q-name',\n        message: 'What is your name?',\n        trigger: 'name'\n      }, {\n        id: 'name',\n        user: true,\n        trigger: 'q-age'\n      }, {\n        id: 'q-age',\n        message: 'What is your last age?',\n        trigger: 'age'\n      }, {\n        id: 'age',\n        user: true,\n        trigger: 'q-job'\n      }, {\n        id: 'q-job',\n        message: 'Finally. what is you job?',\n        trigger: 'job'\n      }, {\n        id: 'job',\n        user: true,\n        trigger: 'q-submit'\n      }, {\n        id: 'q-submit',\n        message: 'Do you wish to submit?',\n        trigger: 'submit'\n      }, {\n        id: 'submit',\n        options: [{\n          value: 'y',\n          label: 'Yes',\n          trigger: 'end-message'\n        }, {\n          value: 'n',\n          label: 'No',\n          trigger: 'no-submit'\n        }]\n      }, {\n        id: 'no-submit',\n        message: 'Your information was not submitted.',\n        end: true\n      }, {\n        id: 'end-message',\n        component: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this),\n        asMessage: true,\n        end: true\n      }],\n      botAvatar: require(\"./data/icon.png\").default,\n      userAvatar: require(\"./data/user.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Chat4;\nexport default Chat4;\nexport function Post() {\n  const constructor = props => {\n    const {\n      steps\n    } = this.props;\n    const {\n      submit,\n      name,\n      age,\n      job\n    } = steps;\n    this.state = {\n      submit,\n      name,\n      age,\n      job\n    };\n  };\n\n  const componentDidMount = () => {\n    const userObject = {\n      submit: this.state.submit.value,\n      name: this.state.name.value,\n      age: this.state.age.value,\n      job: this.state.job.value\n    };\n    alert(`data: ${JSON.stringify(userObject)}`); // axios.post(`/api`, userObject)\n    // .then(res => {\n    //     console.log(res.status)\n    // }).catch(function(error) {\n    //     console.log(error);\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Thank you! Your data was submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c2 = Post;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat4\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/chatbot/components/Chat4.js"],"names":["ChatBot","React","Component","ThemeProvider","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Chat4","id","message","trigger","user","options","value","label","end","component","asMessage","require","default","Post","constructor","props","steps","submit","name","age","job","state","componentDidMount","userObject","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\r\nimport React, { Component } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\n// all available props\r\nconst theme = {\r\n  background: '#f5f8fb',\r\n  fontFamily: 'Helvetica Neue',\r\n  headerBgColor: '#EF6C00',\r\n  headerFontColor: '#fff',\r\n  headerFontSize: '15px',\r\n  botBubbleColor: '#EF6C00',\r\n  botFontColor: '#fff',\r\n  userBubbleColor: '#fff',\r\n  userFontColor: '#4a4a4a',\r\n};\r\n\r\n\r\nconst Chat4 = () => {\r\n  return(\r\n  <ThemeProvider theme={theme}>\r\n    <ChatBot\r\n   steps={[\r\n    {\r\n      id:'q-name', \r\n      message:'What is your name?', \r\n      trigger:'name',\r\n    },\r\n    {\r\n      id:'name', \r\n      user:true,\r\n      trigger:'q-age'\r\n    },\r\n    {\r\n      id:'q-age', \r\n      message:'What is your last age?', \r\n      trigger:'age',\r\n    },\r\n    {\r\n      id:'age', \r\n      user:true,\r\n      trigger:'q-job'\r\n    },\r\n    {\r\n      id:'q-job', \r\n      message:'Finally. what is you job?', \r\n      trigger:'job',\r\n    },\r\n    {\r\n      id:'job', \r\n      user:true,\r\n      trigger:'q-submit'\r\n    },\r\n    {\r\n      id:'q-submit', \r\n      message:'Do you wish to submit?', \r\n      trigger:'submit'\r\n    },\r\n    {\r\n      id:'submit', \r\n      options:[\r\n      {value:'y', label:'Yes', trigger:'end-message'},\r\n      {value:'n', label:'No', trigger:'no-submit'},\r\n      ] \r\n    },\r\n    {\r\n            id: 'no-submit',\r\n            message:'Your information was not submitted.', \r\n            end: true,\r\n         },\r\n              {\r\n            id: 'end-message',\r\n            component: <Post />,\r\n            asMessage: true,\r\n            end: true,\r\n         },\r\n  ]}\r\n  botAvatar={require(\"./data/icon.png\").default} \r\n  userAvatar={require(\"./data/user.png\").default}\r\n/>\r\n  </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Chat4\r\n\r\n\r\nexport function Post () {\r\n    const constructor = (props) => {\r\n        const { steps } = this.props;\r\n        const { submit, name, age, job } = steps;\r\n    \r\n        this.state =  { submit, name, age, job }; \r\n      }\r\n    \r\n    \r\n    const componentDidMount = () => {\r\n        const userObject = {\r\n          submit:this.state.submit.value,\r\n          name:this.state.name.value,\r\n          age:this.state.age.value,\r\n          job:this.state.job.value,\r\n        };\r\n        alert(`data: ${JSON.stringify(userObject)}`)\r\n        // axios.post(`/api`, userObject)\r\n        // .then(res => {\r\n        //     console.log(res.status)\r\n        // }).catch(function(error) {\r\n        //     console.log(error);\r\n        // });\r\n      }\r\n    \r\n    return (<>\r\n            <div>Thank you! Your data was submitted successfully!</div>\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}