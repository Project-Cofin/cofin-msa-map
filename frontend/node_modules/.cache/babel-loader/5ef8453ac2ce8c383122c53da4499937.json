{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { medPoints, casesPoints } from \"../reducer/mapSlice\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction LocalMap() {\n  _s();\n\n  const med_points = useSelector(state => state.map.mapsState);\n  const dispatch = useDispatch();\n  var geoInfo = window.localStorage.getItem('sessionGeo').split(',');\n  const map = new kakao.maps.Map(mapContainer, mapOption);\n  var bounds = new kakao.maps.LatLngBounds();\n  var i, marker;\n  const positions = med_points.map(x => {\n    return {\n      content: `<div style=\"padding:0 3em; border-radius: 15px;\">${x.name}</div>`,\n      latlng: new kakao.maps.LatLng(x.latitude, x.longitude)\n    };\n  });\n\n  for (var i = 0; i < positions.length; i++) {\n    // 마커를 생성합니다\n    var marker = new kakao.maps.Marker({\n      map: map,\n      // 마커를 표시할 지도\n      position: positions[i].latlng // 마커의 위치\n\n    });\n    marker.setMap(map);\n    bounds.extend(positions[i].latlng);\n    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\n    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\n    kakao.maps.event.addListener(marker, 'click', function () {\n      alert('hi!');\n    });\n  }\n\n  const getGeo = e => {\n    if (e.target.value == 'medpoint') {\n      dispatch(medPoints({\n        'latitude': geoInfo[0],\n        'longitude': geoInfo[1]\n      })); // map.setBounds(bounds);\n    } else {\n      dispatch(casesPoints({\n        'latitude': geoInfo[0],\n        'longitude': geoInfo[1]\n      })); // map.setBounds(bounds);\n    }\n  };\n\n  useEffect(() => {\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(','); // alert(geoInfo)\n    // console.log(med_points)\n\n    const mapContainer = document.getElementById('map'),\n          // 지도를 표시할 div  \n    mapOption = {\n      // center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\n      center: new kakao.maps.LatLng(geoInfo[0], geoInfo[1]),\n      // 지도의 중심좌표\n      level: 5 // 지도의 확대 레벨\n\n    };\n    const map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    let positions = med_points.map(x => {\n      return {\n        content: `<div style=\"padding:0 3em; border-radius: 15px;\">${x.name}</div>`,\n        latlng: new kakao.maps.LatLng(x.latitude, x.longitude)\n      };\n    });\n    positions = [...positions, {\n      content: `<div style=\"padding:0 3em; border-radius: 15px;\">내 위치</div>`,\n      latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])\n    }]; // console.log(positions)\n\n    for (let i = 0; i < positions.length; i++) {\n      // 마커를 생성합니다\n      const marker = new kakao.maps.Marker({\n        map: map,\n        // 마커를 표시할 지도\n        position: positions[i].latlng // 마커의 위치\n\n      }); // 마커에 표시할 인포윈도우를 생성합니다 \n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: positions[i].content // 인포윈도우에 표시할 내용\n\n      }); // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n      // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n\n      kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\n      kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\n      kakao.maps.event.addListener(marker, 'click', function () {\n        alert('hi!');\n      });\n    } // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n\n\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    } // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n\n\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OptionUl, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD45C\\uC2DC \\uB300\\uC0C1 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sel\",\n          onChange: getGeo,\n          children: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"\\uD45C\\uC2DC \\uB300\\uC0C1 \\uC120\\uD0DD\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medpoint\",\n              children: \"\\uC120\\uBCC4 \\uC9C4\\uB8CC\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cases\",\n              children: \"\\uD655\\uC9C4\\uC790 \\uBC1C\\uC0DD \\uC704\\uCE58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      id: \"map\",\n      style: {\n        width: \"1000px\",\n        height: \"500px\",\n        float: \"left\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LocalMap, \"kmyQdIwWhGWfBudVaEKXvtSOaRo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LocalMap;\nexport default LocalMap;\nconst OptionUl = styled.ul`\n    list-style: none;\n`;\n_c2 = OptionUl;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocalMap\");\n$RefreshReg$(_c2, \"OptionUl\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/map/components/LocalMap.js"],"names":["React","useEffect","useDispatch","useSelector","medPoints","casesPoints","styled","kakao","window","LocalMap","med_points","state","map","mapsState","dispatch","geoInfo","localStorage","getItem","split","maps","Map","mapContainer","mapOption","bounds","LatLngBounds","i","marker","positions","x","content","name","latlng","LatLng","latitude","longitude","length","Marker","position","setMap","extend","event","addListener","makeOverListener","infowindow","makeOutListener","alert","getGeo","e","target","value","document","getElementById","center","level","InfoWindow","open","close","width","height","float","OptionUl","ul"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { medPoints, casesPoints } from \"../reducer/mapSlice\";\r\nimport styled from \"styled-components\";\r\nconst { kakao } = window;\r\n\r\n\r\nfunction LocalMap() {\r\n    const med_points = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    var geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n\r\n    const map = new kakao.maps.Map(mapContainer, mapOption);\r\n    var bounds = new kakao.maps.LatLngBounds();\r\n    var i, marker;\r\n    const positions = med_points.map(x => {return {content: `<div style=\"padding:0 3em; border-radius: 15px;\">${x.name}</div>`, \r\n    latlng: new kakao.maps.LatLng(x.latitude, x.longitude)}})\r\n    for (var i = 0; i < positions.length; i ++) {\r\n        // 마커를 생성합니다\r\n        var marker = new kakao.maps.Marker({\r\n            map: map, // 마커를 표시할 지도\r\n            position: positions[i].latlng // 마커의 위치\r\n        });\r\n        marker.setMap(map)\r\n        bounds.extend(positions[i].latlng)\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n        kakao.maps.event.addListener(marker, 'click', function(){alert('hi!')})\r\n    }\r\n    const getGeo =(e)=>{\r\n        if (e.target.value == 'medpoint'){\r\n            dispatch(medPoints({'latitude': geoInfo[0], 'longitude': geoInfo[1]}))\r\n            // map.setBounds(bounds);\r\n        }else{\r\n            dispatch(casesPoints({'latitude': geoInfo[0], 'longitude': geoInfo[1]}))\r\n            // map.setBounds(bounds);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    // alert(geoInfo)\r\n    // console.log(med_points)\r\n    const mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n    mapOption = { \r\n        // center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n        center: new kakao.maps.LatLng(geoInfo[0], geoInfo[1]), // 지도의 중심좌표\r\n        level: 5 // 지도의 확대 레벨\r\n    };\r\n\r\n    const map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n    let positions = med_points.map(x => {return {content: `<div style=\"padding:0 3em; border-radius: 15px;\">${x.name}</div>`, \r\n                                                 latlng: new kakao.maps.LatLng(x.latitude, x.longitude)}})\r\n    positions = [...positions, {content: `<div style=\"padding:0 3em; border-radius: 15px;\">내 위치</div>`, latlng: new kakao.maps.LatLng(geoInfo[0], geoInfo[1])}]\r\n    // console.log(positions)\r\n    for (let i = 0; i < positions.length; i ++) {\r\n        // 마커를 생성합니다\r\n        const marker = new kakao.maps.Marker({\r\n            map: map, // 마커를 표시할 지도\r\n            position: positions[i].latlng // 마커의 위치\r\n        });\r\n\r\n        // 마커에 표시할 인포윈도우를 생성합니다 \r\n        const infowindow = new kakao.maps.InfoWindow({\r\n            content: positions[i].content // 인포윈도우에 표시할 내용\r\n        });\r\n\r\n        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n        // 이벤트 리스너로는 클로저를 만들어 등록합니다 \r\n        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n        kakao.maps.event.addListener(marker, 'click', function(){alert('hi!')})\r\n    }\r\n\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n    function makeOverListener(map, marker, infowindow) {\r\n        return function() {\r\n            infowindow.open(map, marker);\r\n        };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n    function makeOutListener(infowindow) {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n  }, []);\r\n\r\n  return (<>\r\n  <OptionUl>\r\n        <li>\r\n            <label>표시 대상 선택</label><br/>\r\n            <select id=\"sel\" onChange={getGeo}>\r\n                <optgroup label=\"표시 대상 선택\">\r\n                  <option value=\"medpoint\">선별 진료소</option>  \r\n                  <option value=\"cases\">확진자 발생 위치</option>  \r\n                </optgroup>\r\n            </select>\r\n        </li>\r\n    </OptionUl>\r\n    <div\r\n      className=\"map\"\r\n      id=\"map\"\r\n      style={{ width: \"1000px\", height: \"500px\", float: \"left\"}}\r\n    ></div>\r\n    </>);\r\n}\r\n\r\nexport default LocalMap;\r\n\r\nconst OptionUl = styled.ul`\r\n    list-style: none;\r\n`"]},"metadata":{},"sourceType":"module"}