{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\WorldForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { WorldMap } from 'react-svg-worldmap';\nimport styled from 'styled-components';\nimport { worldMap } from \"features/map/reducer/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WorldForm() {\n  _s();\n\n  const maps = useSelector(state => state.map.mapsState);\n  const dispatch = useDispatch(); // const array=[]\n\n  useEffect(() => {\n    dispatch(worldMap());\n  }, []);\n  const mapList = maps.map(x => {\n    return {\n      country: x.short_name,\n      value: x.cases\n    };\n  });\n  console.log(mapList); // const data =\n  // [\n  //   { country: \"in\", value: 32857937 }, // india\n  //   { country: \"us\", value: 40330712 },  // united states\n  //   { country: \"br\", value: 20804215 },  // brazil\n  //   { country: \"ru\", value: 6937333 },  // russia\n  //   { country: \"gb\", value: 6825074 },   // UK\n  //   { country: \"fr\", value: 6783329 },   // france\n  //   { country: \"tr\", value: 6412277 },   // turkey\n  //   { country: \"ar\", value: 5190948 },   // Argentina\n  //   { country: \"ir\", value: 5025233 },   // Iran\n  //   { country: \"co\", value: 4911082 },   // Colombia\n  //   { country: \"kr\", value: 255401 }   // korea\n  // ]\n\n  const stylingFunction = ({\n    countryValue,\n    minValue,\n    maxValue,\n    country,\n    color\n  }) => {\n    const opacityLevel = 0.1 + 1.5 * (countryValue - minValue) / (maxValue - minValue);\n    return {\n      // fill: country === 'US' ? 'blue' : color,\n      fill: countryValue < 300000 ? 'green' : color,\n      fillOpacity: opacityLevel,\n      stroke: 'brown',\n      strokeWidth: 1,\n      strokeOpacity: 0.2,\n      cursor: 'pointer'\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WorldMapDiv, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(WorldMap, {\n        color: \"red\",\n        title: \"Top 10 Coronavirus Rates\",\n        \"value-suffix\": \"people\",\n        size: \"xxl\",\n        data: [{\n          country: 'US',\n          value: '48072898'\n        }, {\n          country: 'IN',\n          value: '34447536'\n        }, {\n          country: 'BR',\n          value: '21960766'\n        }, {\n          country: 'GB',\n          value: '9600369'\n        }, {\n          country: 'RU',\n          value: '9109094'\n        }, {\n          country: 'TR',\n          value: '8432018'\n        }, {\n          country: 'FR',\n          value: '7290886'\n        }, {\n          country: 'IR',\n          value: '6045212'\n        }, {\n          country: 'AR',\n          value: '5307159'\n        }, {\n          country: 'DE',\n          value: '5068919'\n        }, {\n          country: 'KR',\n          value: '399591'\n        }],\n        frame: true,\n        styleFunction: stylingFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WorldForm, \"0GhUXsbXi1sVlwlRm66zP38v8qg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = WorldForm;\nconst WorldMapDiv = styled.div`\n  text-align: center;\n`;\n_c2 = WorldMapDiv;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WorldForm\");\n$RefreshReg$(_c2, \"WorldMapDiv\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/components/WorldForm.js"],"names":["React","useEffect","useDispatch","useSelector","WorldMap","styled","worldMap","WorldForm","maps","state","map","mapsState","dispatch","mapList","x","country","short_name","value","cases","console","log","stylingFunction","countryValue","minValue","maxValue","color","opacityLevel","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","cursor","WorldMapDiv","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,+BAAzB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,SAApB,CAAxB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAFgC,CAGhC;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,QAAMO,OAAO,GAAGL,IAAI,CAACE,GAAL,CAASI,CAAC,IAAI;AAAC,WAAO;AAACC,MAAAA,OAAO,EAAED,CAAC,CAACE,UAAZ;AAAwBC,MAAAA,KAAK,EAAEH,CAAC,CAACI;AAAjC,KAAP;AAA+C,GAA9D,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EARgC,CAShC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMQ,eAAe,GAAG,CAAC;AACrBC,IAAAA,YADqB;AAErBC,IAAAA,QAFqB;AAGrBC,IAAAA,QAHqB;AAIrBT,IAAAA,OAJqB;AAKrBU,IAAAA;AALqB,GAAD,KAMhB;AACJ,UAAMC,YAAY,GAChB,MAAO,OAAOJ,YAAY,GAAGC,QAAtB,CAAD,IAAqCC,QAAQ,GAAGD,QAAhD,CADR;AAEA,WAAO;AACL;AACAI,MAAAA,IAAI,EAAEL,YAAY,GAAG,MAAf,GAAwB,OAAxB,GAAkCG,KAFnC;AAGLG,MAAAA,WAAW,EAAEF,YAHR;AAILG,MAAAA,MAAM,EAAE,OAJH;AAKLC,MAAAA,WAAW,EAAE,CALR;AAMLC,MAAAA,aAAa,EAAE,GANV;AAOLC,MAAAA,MAAM,EAAE;AAPH,KAAP;AASD,GAlBH;;AAoBA,sBAAQ;AAAA,2BACJ,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,KAAhB;AAAsB,QAAA,KAAK,EAAC,0BAA5B;AAAuD,wBAAa,QAApE;AAA6E,QAAA,IAAI,EAAC,KAAlF;AACA,QAAA,IAAI,EAAE,CACJ;AAACjB,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SADI,EAEJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAFI,EAGJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAHI,EAIJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAJI,EAKJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SALI,EAMJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SANI,EAOJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAPI,EAQJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SARI,EASJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SATI,EAUJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAVI,EAWJ;AAACF,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAXI,CADN;AAaG,QAAA,KAAK,EAAE,IAbV;AAagB,QAAA,aAAa,EAAEI;AAb/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAmBH;;GAhEuBd,S;UACPJ,W,EACID,W;;;KAFGK,S;AAkExB,MAAM0B,WAAW,GAAG5B,MAAM,CAAC6B,GAAI;AAC/B;AACA,CAFA;MAAMD,W","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function WorldForm() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    // const array=[]\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n    const mapList = maps.map(x => {return {country: x.short_name, value: x.cases}})\r\n    console.log(mapList)\r\n    // const data =\r\n    // [\r\n    //   { country: \"in\", value: 32857937 }, // india\r\n    //   { country: \"us\", value: 40330712 },  // united states\r\n    //   { country: \"br\", value: 20804215 },  // brazil\r\n    //   { country: \"ru\", value: 6937333 },  // russia\r\n    //   { country: \"gb\", value: 6825074 },   // UK\r\n    //   { country: \"fr\", value: 6783329 },   // france\r\n    //   { country: \"tr\", value: 6412277 },   // turkey\r\n    //   { country: \"ar\", value: 5190948 },   // Argentina\r\n    //   { country: \"ir\", value: 5025233 },   // Iran\r\n    //   { country: \"co\", value: 4911082 },   // Colombia\r\n\r\n    //   { country: \"kr\", value: 255401 }   // korea\r\n    // ]\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel =\r\n          0.1 + (1.5 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={[\r\n              {country: 'US', value: '48072898'},\r\n              {country: 'IN', value: '34447536'},\r\n              {country: 'BR', value: '21960766'},\r\n              {country: 'GB', value: '9600369'},\r\n              {country: 'RU', value: '9109094'},\r\n              {country: 'TR', value: '8432018'},\r\n              {country: 'FR', value: '7290886'},\r\n              {country: 'IR', value: '6045212'},\r\n              {country: 'AR', value: '5307159'},\r\n              {country: 'DE', value: '5068919'},\r\n              {country: 'KR', value: '399591'}\r\n            ]} frame={true} styleFunction={stylingFunction} />\r\n            {/* data={maps.map(x => {return {country: x.name, value: x.cases}})} frame={true} styleFunction={stylingFunction} /> */}\r\n        </WorldMapDiv>\r\n    </>)\r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`"]},"metadata":{},"sourceType":"module"}