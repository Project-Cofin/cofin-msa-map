{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\Geolocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { LocalMap } from \"..\";\nimport { medPoints } from \"../reducer/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Geolocation = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //   alert(position.coords.latitude + ' ' + position.coords.longitude);\n        window.localStorage.setItem('sessionGeo', [position.coords.latitude, position.coords.longitude]);\n        dispatch(medPoints({\n          'latitude': position.coords.latitude,\n          'longitude': position.coords.longitude\n        }));\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LocalMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(Geolocation, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/map/components/Geolocation.js"],"names":["React","useEffect","useDispatch","LocalMap","medPoints","Geolocation","dispatch","navigator","geolocation","getCurrentPosition","position","window","localStorage","setItem","coords","latitude","longitude","error","console","enableHighAccuracy","maximumAge","timeout","Infinity","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACED,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,SAAS,CAACC,WAAd,EAA2B;AAAE;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC5D;AACAC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0C,CAACH,QAAQ,CAACI,MAAT,CAAgBC,QAAjB,EAA2BL,QAAQ,CAACI,MAAT,CAAgBE,SAA3C,CAA1C;AACAV,QAAAA,QAAQ,CAACF,SAAS,CAAC;AAAC,sBAAYM,QAAQ,CAACI,MAAT,CAAgBC,QAA7B;AAAuC,uBAAaL,QAAQ,CAACI,MAAT,CAAgBE;AAApE,SAAD,CAAV,CAAR;AACC,OAJD,EAIG,UAASC,KAAT,EAAgB;AACjBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAND,EAMG;AACDE,QAAAA,kBAAkB,EAAE,KADnB;AAEDC,QAAAA,UAAU,EAAE,CAFX;AAGDC,QAAAA,OAAO,EAAEC;AAHR,OANH;AAWD,KAZH,MAYS;AACLC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACN,GAhBQ,EAgBP,EAhBO,CAAT;AAiBA,sBAAO;AAAA,2BAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAF,mBAAP;AACH,CApBD;;GAAMlB,W;UACaH,W;;;KADbG,W;AAsBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LocalMap } from \"..\";\r\nimport { medPoints } from \"../reducer/mapSlice\";\r\n\r\nconst Geolocation = () => {\r\n  const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n            //   alert(position.coords.latitude + ' ' + position.coords.longitude);\r\n            window.localStorage.setItem('sessionGeo', [position.coords.latitude, position.coords.longitude])\r\n            dispatch(medPoints({'latitude': position.coords.latitude, 'longitude': position.coords.longitude}))\r\n            }, function(error) {\r\n              console.error(error);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge: 0,\r\n              timeout: Infinity\r\n            });\r\n          } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n          }\r\n    },[])\r\n    return(<><LocalMap/></>)\r\n}\r\n\r\nexport default Geolocation"]},"metadata":{},"sourceType":"module"}