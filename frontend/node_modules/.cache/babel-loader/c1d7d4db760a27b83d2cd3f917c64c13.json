{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\ai-work\\\\cofin-msa-organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\nimport React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction LocalMap() {\n  _s();\n\n  const [state, setState] = useState();\n  const geoInfo = window.localStorage.getItem('sessionGeo').split(',');\n  const [map, setMap] = useState();\n  let points = useSelector(state => state.map.mapsState.map(x => {\n    return {\n      title: x.name,\n      latlng: {\n        lat: x.latitude,\n        lng: x.longitude\n      }\n    };\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: {\n        // 지도의 중심좌표\n        lat: geoInfo[0],\n        lng: geoInfo[1]\n      },\n      style: {\n        width: \"1000px\",\n        height: \"600px\"\n      },\n      level: 5 // 지도의 확대 레벨\n      ,\n      onCreate: setMap,\n      children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: geoInfo[0],\n          lng: geoInfo[1]\n        },\n        title: \"\\uD604\\uC7AC \\uC704\\uCE58\",\n        image: {\n          // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\n          src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1637741898~hmac=fada3fe37d0197cf397c5d7713400e95\",\n          size: {\n            width: 45,\n            height: 50\n          },\n          // 마커이미지의 크기입니다\n          options: {\n            offset: {\n              x: 25,\n              y: 45\n            } // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), points.map((position, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: position.latlng,\n        title: position.title\n      }, `${position.title}-${position.latlng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(LocalMap, \"ZM+IyQuNIyung031QdbXmtROeqQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = LocalMap;\nexport default LocalMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalMap\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/map/components/LocalMap.js"],"names":["Map","MapMarker","React","useState","useMemo","useDispatch","useSelector","kakao","window","LocalMap","state","setState","geoInfo","localStorage","getItem","split","map","setMap","points","mapsState","x","title","name","latlng","lat","latitude","lng","longitude","width","height","src","size","options","offset","y","position","index"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,sBAA/B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,MAAlB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAMS,OAAO,GAAGJ,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CC,KAA1C,CAAgD,GAAhD,CAAhB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,EAA9B;AACA,MAAIe,MAAM,GAAGZ,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACM,GAAN,CAAUG,SAAV,CAAoBH,GAApB,CAC9BI,CAAC,IAAI;AAAC,WAAO;AAACC,MAAAA,KAAK,EAAED,CAAC,CAACE,IAAV;AACCC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEJ,CAAC,CAACK,QAAR;AAAkBC,QAAAA,GAAG,EAACN,CAAC,CAACO;AAAxB;AADT,KAAP;AACoD,GAF5B,CAAV,CAAxB;AAKA,sBAAO;AAAA,2BACP,QAAC,GAAD,CAAK;AAAL;AACM,MAAA,MAAM,EAAE;AACN;AACAH,QAAAA,GAAG,EAAEZ,OAAO,CAAC,CAAD,CAFN;AAGNc,QAAAA,GAAG,EAAEd,OAAO,CAAC,CAAD;AAHN,OADd;AAMM,MAAA,KAAK,EAAE;AACLgB,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OANb;AAUM,MAAA,KAAK,EAAE,CAVb,CAUgB;AAVhB;AAWM,MAAA,QAAQ,EAAEZ,MAXhB;AAAA,8BAaQ,QAAC,SAAD;AACA,QAAA,QAAQ,EAAE;AAACO,UAAAA,GAAG,EAAEZ,OAAO,CAAC,CAAD,CAAb;AAAkBc,UAAAA,GAAG,EAACd,OAAO,CAAC,CAAD;AAA7B,SADV;AAEA,QAAA,KAAK,EAAC,2BAFN;AAGA,QAAA,KAAK,EAAE;AACH;AACAkB,UAAAA,GAAG,EAAE,4HAFF;AAGHC,UAAAA,IAAI,EAAE;AACJH,YAAAA,KAAK,EAAE,EADH;AAEJC,YAAAA,MAAM,EAAE;AAFJ,WAHH;AAMA;AACHG,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AACNb,cAAAA,CAAC,EAAE,EADG;AAENc,cAAAA,CAAC,EAAE;AAFG,aADD,CAIJ;;AAJI;AAPN;AAHP;AAAA;AAAA;AAAA;AAAA,cAbR,EA+BOhB,MAAM,CAACF,GAAP,CAAW,CAACmB,QAAD,EAAWC,KAAX,kBACV,QAAC,SAAD;AAEA,QAAA,QAAQ,EAAED,QAAQ,CAACZ,MAFnB;AAGA,QAAA,KAAK,EAAEY,QAAQ,CAACd;AAHhB,SACM,GAAEc,QAAQ,CAACd,KAAM,IAAGc,QAAQ,CAACZ,MAAO,EAD1C;AAAA;AAAA;AAAA;AAAA,cADD,CA/BP;AAAA;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AA0CH;;GAnDQd,Q;UAIQH,W;;;KAJRG,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport React, {useState, useMemo} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst { kakao } = window; \r\n\r\nfunction LocalMap() {\r\n    const [state, setState] = useState()\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    const [map, setMap] = useState()\r\n    let points = useSelector(state => state.map.mapsState.map(\r\n        x => {return {title: x.name,\r\n                      latlng: {lat: x.latitude, lng:x.longitude}}}\r\n    )) \r\n\r\n    return(<>\r\n    <Map // 지도를 표시할 Container\r\n          center={{\r\n            // 지도의 중심좌표\r\n            lat: geoInfo[0],\r\n            lng: geoInfo[1],\r\n          }}\r\n          style={{\r\n            width: \"1000px\",\r\n            height: \"600px\",\r\n          }}\r\n          level={5} // 지도의 확대 레벨\r\n          onCreate={setMap}\r\n        >\r\n            <MapMarker\r\n            position={{lat: geoInfo[0], lng:geoInfo[1]}}\r\n            title='현재 위치'\r\n            image={{\r\n                // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\r\n                src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1637741898~hmac=fada3fe37d0197cf397c5d7713400e95\", \r\n                size: {\r\n                  width: 45,\r\n                  height: 50,\r\n                }, // 마커이미지의 크기입니다\r\n                options: {\r\n                  offset: {\r\n                    x: 25,\r\n                    y: 45,\r\n                  }, // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n                },\r\n              }}\r\n            />\r\n          {points.map((position, index) => (\r\n            <MapMarker\r\n            key={`${position.title}-${position.latlng}`}\r\n            position={position.latlng}\r\n            title={position.title}\r\n            />\r\n      ))}\r\n        </Map>\r\n        \r\n    </>);\r\n}\r\n\r\nexport default LocalMap;\r\n"]},"metadata":{},"sourceType":"module"}