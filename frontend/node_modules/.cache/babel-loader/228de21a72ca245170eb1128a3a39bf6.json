{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { casesPoints, medPoints } from \"../reducer/mapSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Geolocation = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //   alert(position.coords.latitude + ' ' + position.coords.longitude);\n        alert(props);\n\n        if (props.name == \"medpoint\") {\n          dispatch(medPoints({\n            'latitude': position.coords.latitude,\n            'longitude': position.coords.longitude\n          }));\n        } else {\n          dispatch(casesPoints({\n            'latitude': position.coords.latitude,\n            'longitude': position.coords.longitude\n          }));\n        }\n\n        window.localStorage.setItem('sessionGeo', [position.coords.latitude, position.coords.longitude]);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n      window.localStorage.setItem('sessionGeo', ['37.5885933100535', '127.101500688631']);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Geolocation, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Geolocation;\nexport default Geolocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"sources":["C:/Users/bitcamp/ai-work/cofin-msa-organ/frontend/src/features/map/components/Geolocation.js"],"names":["React","useEffect","useDispatch","casesPoints","medPoints","Geolocation","props","dispatch","navigator","geolocation","getCurrentPosition","position","alert","name","coords","latitude","longitude","window","localStorage","setItem","error","console","enableHighAccuracy","maximumAge","timeout","Infinity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,qBAAvC;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACED,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,SAAS,CAACC,WAAd,EAA2B;AAAE;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC5D;AACAC,QAAAA,KAAK,CAACN,KAAD,CAAL;;AACA,YAAGA,KAAK,CAACO,IAAN,IAAY,UAAf,EAA0B;AACxBN,UAAAA,QAAQ,CAACH,SAAS,CAAC;AAAC,wBAAYO,QAAQ,CAACG,MAAT,CAAgBC,QAA7B;AAAuC,yBAAaJ,QAAQ,CAACG,MAAT,CAAgBE;AAApE,WAAD,CAAV,CAAR;AACD,SAFD,MAEK;AACHT,UAAAA,QAAQ,CAACJ,WAAW,CAAC;AAAC,wBAAYQ,QAAQ,CAACG,MAAT,CAAgBC,QAA7B;AAAuC,yBAAaJ,QAAQ,CAACG,MAAT,CAAgBE;AAApE,WAAD,CAAZ,CAAR;AACD;;AACDC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0C,CAACR,QAAQ,CAACG,MAAT,CAAgBC,QAAjB,EAA2BJ,QAAQ,CAACG,MAAT,CAAgBE,SAA3C,CAA1C;AACC,OATD,EASG,UAASI,KAAT,EAAgB;AACjBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAXD,EAWG;AACDE,QAAAA,kBAAkB,EAAE,KADnB;AAEDC,QAAAA,UAAU,EAAE,CAFX;AAGDC,QAAAA,OAAO,EAAEC;AAHR,OAXH;AAgBD,KAjBH,MAiBS;AACLb,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACAK,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0C,CAAC,kBAAD,EAAqB,kBAArB,CAA1C;AACD;AACN,GAtBQ,EAsBP,EAtBO,CAAT;AAuBA,sBAAO,qCAAP;AACH,CA1BD;;GAAMd,W;UACaH,W;;;KADbG,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { casesPoints, medPoints } from \"../reducer/mapSlice\";\r\n\r\nconst Geolocation = (props) => {\r\n  const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n            //   alert(position.coords.latitude + ' ' + position.coords.longitude);\r\n            alert(props)\r\n            if(props.name==\"medpoint\"){\r\n              dispatch(medPoints({'latitude': position.coords.latitude, 'longitude': position.coords.longitude}))\r\n            }else{\r\n              dispatch(casesPoints({'latitude': position.coords.latitude, 'longitude': position.coords.longitude}))\r\n            }\r\n            window.localStorage.setItem('sessionGeo', [position.coords.latitude, position.coords.longitude])\r\n            }, function(error) {\r\n              console.error(error);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge: 0,\r\n              timeout: Infinity\r\n            });\r\n          } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n            window.localStorage.setItem('sessionGeo', ['37.5885933100535', '127.101500688631'])\r\n          }\r\n    },[])\r\n    return(<></>)\r\n}\r\n\r\nexport default Geolocation"]},"metadata":{},"sourceType":"module"}