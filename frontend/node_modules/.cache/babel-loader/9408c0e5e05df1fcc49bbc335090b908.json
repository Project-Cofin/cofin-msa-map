{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\TeamProject\\\\organ\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction LocalMap() {\n  _s();\n\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div  \n    mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \n\n    var positions = [{\n      content: '<div>카카오</div>',\n      latlng: new kakao.maps.LatLng(33.450705, 126.570677)\n    }, {\n      content: '<div>생태연못</div>',\n      latlng: new kakao.maps.LatLng(33.450936, 126.569477)\n    }, {\n      content: '<div>텃밭</div>',\n      latlng: new kakao.maps.LatLng(33.450879, 126.569940)\n    }, {\n      content: '<div>근린공원</div>',\n      latlng: new kakao.maps.LatLng(33.451393, 126.570738)\n    }];\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        // 마커를 표시할 지도\n        position: positions[i].latlng // 마커의 위치\n\n      }); // 마커에 표시할 인포윈도우를 생성합니다 \n\n      var infowindow = new kakao.maps.InfoWindow({\n        content: positions[i].content // 인포윈도우에 표시할 내용\n\n      }); // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n      // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n\n      kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\n      kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\n    } // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n\n\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    } // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n\n\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    id: \"map\",\n    style: {\n      width: \"1000px\",\n      height: \"500px\",\n      display: \"inline-block\"\n    } //   ref={mapContainer}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocalMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LocalMap;\nexport default LocalMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalMap\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/TeamProject/organ/frontend/src/features/map/components/LocalMap.js"],"names":["React","useEffect","kakao","window","LocalMap","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","positions","content","latlng","i","length","marker","Marker","position","infowindow","InfoWindow","event","addListener","makeOverListener","makeOutListener","open","close","width","height","display"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nconst { kakao } = window;\r\n\r\n\r\nfunction LocalMap() {\r\n  useEffect(() => {\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n    mapOption = { \r\n        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n    \r\n    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 \r\n    var positions = [\r\n        {\r\n            content: '<div>카카오</div>', \r\n            latlng: new kakao.maps.LatLng(33.450705, 126.570677)\r\n        },\r\n        {\r\n            content: '<div>생태연못</div>', \r\n            latlng: new kakao.maps.LatLng(33.450936, 126.569477)\r\n        },\r\n        {\r\n            content: '<div>텃밭</div>', \r\n            latlng: new kakao.maps.LatLng(33.450879, 126.569940)\r\n        },\r\n        {\r\n            content: '<div>근린공원</div>',\r\n            latlng: new kakao.maps.LatLng(33.451393, 126.570738)\r\n        }\r\n    ];\r\n\r\n    for (var i = 0; i < positions.length; i ++) {\r\n        // 마커를 생성합니다\r\n        var marker = new kakao.maps.Marker({\r\n            map: map, // 마커를 표시할 지도\r\n            position: positions[i].latlng // 마커의 위치\r\n        });\r\n\r\n        // 마커에 표시할 인포윈도우를 생성합니다 \r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: positions[i].content // 인포윈도우에 표시할 내용\r\n        });\r\n\r\n        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n        // 이벤트 리스너로는 클로저를 만들어 등록합니다 \r\n        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n    }\r\n\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n    function makeOverListener(map, marker, infowindow) {\r\n        return function() {\r\n            infowindow.open(map, marker);\r\n        };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n    function makeOutListener(infowindow) {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"map\"\r\n      id=\"map\"\r\n      style={{ width: \"1000px\", height: \"500px\", display: \"inline-block\"}}\r\n    //   ref={mapContainer}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default LocalMap;"]},"metadata":{},"sourceType":"module"}