[{"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\index.js":"1","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\App.js":"2","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\app\\store.js":"4","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\index.js":"5","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\index.js":"6","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\index.js":"7","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Home.js":"8","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Navigation.js":"9","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js":"10","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat.js":"11","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMap.js":"12","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js":"13","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Geolocation.js":"14","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Options.js":"15","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"16","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js":"17","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\World.js":"18","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"19","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js":"20","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js":"21","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js":"22"},{"size":725,"mtime":1637054563490,"results":"23","hashOfConfig":"24"},{"size":955,"mtime":1637838626633,"results":"25","hashOfConfig":"24"},{"size":5151,"mtime":1637054563494,"results":"26","hashOfConfig":"24"},{"size":462,"mtime":1637803007454,"results":"27","hashOfConfig":"24"},{"size":144,"mtime":1637054563418,"results":"28","hashOfConfig":"24"},{"size":344,"mtime":1637802935575,"results":"29","hashOfConfig":"24"},{"size":702,"mtime":1637135068856,"results":"30","hashOfConfig":"24"},{"size":125,"mtime":1637054563412,"results":"31","hashOfConfig":"24"},{"size":564,"mtime":1637309805899,"results":"32","hashOfConfig":"24"},{"size":2651,"mtime":1637801333238,"results":"33","hashOfConfig":"24"},{"size":5126,"mtime":1637841268266,"results":"34","hashOfConfig":"24"},{"size":2115,"mtime":1637804140915,"results":"35","hashOfConfig":"24"},{"size":475,"mtime":1637804123726,"results":"36","hashOfConfig":"24"},{"size":1036,"mtime":1637804171472,"results":"37","hashOfConfig":"24"},{"size":1109,"mtime":1637804098988,"results":"38","hashOfConfig":"24"},{"size":263,"mtime":1637740082151,"results":"39","hashOfConfig":"24"},{"size":1676,"mtime":1637807254484,"results":"40","hashOfConfig":"24"},{"size":1394,"mtime":1637302487769,"results":"41","hashOfConfig":"24"},{"size":145,"mtime":1637135068856,"results":"42","hashOfConfig":"24"},{"size":528,"mtime":1637803214813,"results":"43","hashOfConfig":"24"},{"size":1307,"mtime":1637841524624,"results":"44","hashOfConfig":"24"},{"size":474,"mtime":1637841420002,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1itd7p0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\index.js",[],["97","98"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\App.js",["99"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\app\\store.js",["100"],"import {\r\n  configureStore,\r\n  combineReducers,  // redux의 reducer의 집합과 같다.\r\n  getDefaultMiddleware\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport { map } from 'features/map'\r\nimport { chatbot } from 'features/chatbot'\r\n\r\nconst rootReducer = combineReducers({map, chatbot})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\r\n});\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Home.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Navigation.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js",["101"],"import React from \"react\";\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  InfoButton, \r\n  MessageInput,\r\n  Avatar,\r\n  ConversationHeader,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function Chat2() {\r\n  const inputRef = useRef();\r\n  const [msgInputValue, setMsgInputValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = (message) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        message,\r\n        direction: \"outgoing\",\r\n      },\r\n    ]);\r\n    setMsgInputValue(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"800px\",\r\n        width: \"500px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <MainContainer responsive>\r\n        <ChatContainer>\r\n          <ConversationHeader>\r\n            <ConversationHeader.Back />\r\n            <Avatar src={require(\"./data/icon.png\").default} name=\"Cofin\" />\r\n            <ConversationHeader.Content userName=\"Cofin\" />\r\n            <ConversationHeader.Actions>\r\n              <VoiceCallButton />\r\n              <VideoCallButton />\r\n              <InfoButton />\r\n            </ConversationHeader.Actions>\r\n          </ConversationHeader>\r\n          <MessageList>\r\n            <Message\r\n              model={{\r\n                message: \"Hello my friend\",\r\n                sentTime: \"15 mins ago\",\r\n                sender: \"Cofin\",\r\n                direction: \"incoming\",\r\n                position: \"single\",\r\n              }}\r\n            >\r\n              <Avatar src={require(\"./data/icon.png\").default} name={\"Cofin\"} />\r\n            </Message>\r\n            {messages.map((m, i) => (\r\n              <Message key={i} model={m} />\r\n            ))}\r\n          </MessageList>\r\n          <div\r\n            as={MessageInput}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              borderTop: \"1px dashed #d1dbe4\",\r\n            }}\r\n          >\r\n            <MessageInput\r\n              ref={inputRef}\r\n              onChange={(msg) => setMsgInputValue(msg)}\r\n              value={msgInputValue}\r\n              // sendButton={false}\r\n              attachButton={false}\r\n              onSend={handleSend}\r\n              style={{\r\n                flexGrow: 1,\r\n                borderTop: 0,\r\n                flexShrink: \"initial\",\r\n              }}\r\n            />\r\n          </div>\r\n        </ChatContainer>\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat.js",["102","103","104","105","106","107","108"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMap.js",["109"],"import { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport React, {useState} from \"react\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function LocalMap() {\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    const [map, setMap] = useState()\r\n    let points = useSelector(state => state.map.mapsState.map(\r\n        x => {return {title: x.name,\r\n                      latlng: {lat: x.latitude, lng:x.longitude}}}\r\n    )) \r\n\r\n    return(<>\r\n    <Map\r\n          center={{\r\n            lat: geoInfo[0],\r\n            lng: geoInfo[1],\r\n          }}\r\n          style={{\r\n            width: \"1000px\",\r\n            height: \"600px\",\r\n          }}\r\n          level={5}\r\n          onCreate={setMap}\r\n        >\r\n            <MapMarker\r\n            position={{lat: geoInfo[0], lng:geoInfo[1]}}\r\n            title='현재 위치'\r\n            image={{\r\n                // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\r\n                src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1637741898~hmac=fada3fe37d0197cf397c5d7713400e95\", \r\n                size: {\r\n                  width: 45,\r\n                  height: 45,\r\n                }, \r\n                options: {\r\n                  offset: {\r\n                    x: 25,\r\n                    y: 45,\r\n                  }, \r\n                },\r\n              }}\r\n            />\r\n          {points.map((position, index) => (\r\n            <MapMarker\r\n            key={`${position.title}-${position.latlng}`}\r\n            position={position.latlng}\r\n            title={position.title}\r\n            image={{\r\n              src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693879.png?token=exp=1637741898~hmac=59a8cfd836c546dab8091bb296ba21aa\", \r\n              size: {\r\n                width: 45,\r\n                height: 45,\r\n              }, \r\n              options: {\r\n                offset: {\r\n                  x: 25,\r\n                  y: 45,\r\n                }, \r\n              },\r\n            }}\r\n            />\r\n      ))}\r\n        </Map>\r\n        \r\n    </>);\r\n}\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Geolocation.js",["110"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { medPoints } from \"../reducer/mapSlice\";\r\n\r\nexport default function Geolocation() {\r\n  const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n            const latlng = [position.coords.latitude, position.coords.longitude]\r\n            dispatch(medPoints({'latitude': latlng[0], 'longitude': latlng[1]}))\r\n            window.localStorage.setItem('sessionGeo', [...latlng])\r\n            }, function(error) {\r\n              console.error(error);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge: 0,\r\n              timeout: Infinity\r\n            });\r\n          } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n            window.localStorage.setItem('sessionGeo', ['37.49939596822029', '127.02902373805311'])\r\n          }\r\n    },[])\r\n    return(<></>)\r\n}\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Options.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\World.js",["111"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel = 0.1 + (1.0 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={maps.map(x => {return {country: x.meta, value: parseInt(x.cases)}})} \r\n            frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>) \r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js",["112"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8000/api/map'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst world = () => axios.get(`${SERVER}/world`)\r\nconst medPoint = x => axios.get(`${SERVER}/med-point/${x}`)\r\nconst medPoints = x => axios.post(`${SERVER}/med-points`, JSON.stringify(x), {headers})\r\nconst cases = x => axios.post(`${SERVER}/cases-points`, JSON.stringify(x), {headers})\r\n\r\nexport default {\r\n  world,\r\n  medPoint,\r\n  medPoints,\r\n  cases,\r\n}","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":6,"column":38,"nodeType":"120","messageId":"121","endLine":6,"endColumn":49},{"ruleId":"118","severity":1,"message":"122","line":4,"column":3,"nodeType":"120","messageId":"121","endLine":4,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"125","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":118,"column":5,"nodeType":"129","endLine":118,"endColumn":11,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":122,"column":13,"nodeType":"133","messageId":"134","endLine":122,"endColumn":15},{"ruleId":"118","severity":1,"message":"135","line":133,"column":9,"nodeType":"120","messageId":"121","endLine":133,"endColumn":15},{"ruleId":"127","severity":1,"message":"136","line":138,"column":5,"nodeType":"129","endLine":138,"endColumn":7,"suggestions":"137"},{"ruleId":"118","severity":1,"message":"138","line":7,"column":12,"nodeType":"120","messageId":"121","endLine":7,"endColumn":15},{"ruleId":"127","severity":1,"message":"139","line":24,"column":7,"nodeType":"129","endLine":24,"endColumn":9,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"139","line":12,"column":7,"nodeType":"129","endLine":12,"endColumn":9,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":13,"column":1,"nodeType":"144","endLine":18,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":12,"column":1,"nodeType":"144","endLine":15,"endColumn":2},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Geolocation' is defined but never used.","Identifier","unusedVar","'getDefaultMiddleware' is defined but never used.","'styles' is defined but never used.","'Component' is defined but never used.","'render' is defined but never used.","'func' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.steps.userinput.value'. Either include them or remove the dependency array. If 'setText' needs the current value of 'props.steps.userinput.value', you can also switch to useReducer instead of useState and read 'props.steps.userinput.value' in the reducer.","ArrayExpression",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'choice' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.previousStep.message', and 'props.previousStep.value'. Either include them or remove the dependency array.",["148"],"'map' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["149"],["150"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},"Update the dependencies array to be: [dispatch, props.steps.userinput.value, text]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch, props.previousStep.message, props.previousStep.value]",{"range":"160","text":"161"},"Update the dependencies array to be: [dispatch]",{"range":"162","text":"163"},{"range":"164","text":"163"},[3676,3682],"[dispatch, props.steps.userinput.value, text]",[4332,4334],"[dispatch, props.previousStep.message, props.previousStep.value]",[981,983],"[dispatch]",[436,438]]