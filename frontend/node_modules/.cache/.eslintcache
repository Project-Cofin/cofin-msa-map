[{"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\index.js":"1","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\App.js":"2","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\app\\store.js":"4","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\Counter.js":"5","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterAPI.js":"7","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Home.js":"8","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\index.js":"9","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\index.js":"10","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\index.js":"11","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat.js":"12","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Navigation.js":"13","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\WorldMap.js":"14","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMap.js":"15","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"16","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"17","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js":"18","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat3.js":"19"},{"size":725,"mtime":1635827534687,"results":"20","hashOfConfig":"21"},{"size":1009,"mtime":1635993244717,"results":"22","hashOfConfig":"21"},{"size":5151,"mtime":1635827534687,"results":"23","hashOfConfig":"21"},{"size":212,"mtime":1635827534678,"results":"24","hashOfConfig":"21"},{"size":1759,"mtime":1633311600489,"results":"25","hashOfConfig":"21"},{"size":2819,"mtime":1635827534684,"results":"26","hashOfConfig":"21"},{"size":202,"mtime":1635827534684,"results":"27","hashOfConfig":"21"},{"size":125,"mtime":1635838815505,"results":"28","hashOfConfig":"21"},{"size":144,"mtime":1635827534682,"results":"29","hashOfConfig":"21"},{"size":206,"mtime":1635852789715,"results":"30","hashOfConfig":"21"},{"size":296,"mtime":1635840564563,"results":"31","hashOfConfig":"21"},{"size":2748,"mtime":1635840730440,"results":"32","hashOfConfig":"21"},{"size":633,"mtime":1635852769278,"results":"33","hashOfConfig":"21"},{"size":129,"mtime":1635838800605,"results":"34","hashOfConfig":"21"},{"size":1044,"mtime":1635838794295,"results":"35","hashOfConfig":"21"},{"size":151,"mtime":1635832875483,"results":"36","hashOfConfig":"21"},{"size":453,"mtime":1635841017726,"results":"37","hashOfConfig":"21"},{"size":1169,"mtime":1635841794304,"results":"38","hashOfConfig":"21"},{"size":2647,"mtime":1635852921541,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"dkgapf",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\index.js",[],["83","84"],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\App.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\app\\store.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\Counter.js",[],["85","86"],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterAPI.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Home.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat.js",["87","88","89"],"import React, { useRef, useState } from \"react\";\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n  ConversationHeader,\r\n  Avatar,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n  InfoButton,\r\n  SendButton,\r\n  AttachmentButton,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\n\r\nexport default function Local() {\r\n  const inputRef = useRef();\r\n  const [msgInputValue, setMsgInputValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = (message) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        message,\r\n        direction: \"outgoing\",\r\n      },\r\n    ]);\r\n    setMsgInputValue(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      <ChatContainer>\r\n        <ConversationHeader>\r\n          <ConversationHeader.Content userName=\"Zoe\" info=\"Beautiful day\" />\r\n          <ConversationHeader.Actions>\r\n            <VoiceCallButton />\r\n            <VideoCallButton />\r\n            <InfoButton />\r\n          </ConversationHeader.Actions>\r\n        </ConversationHeader>\r\n\r\n        <MessageList>\r\n          {messages.map((m, i) => (\r\n            <Message key={i} model={m} />\r\n          ))}\r\n        </MessageList>\r\n\r\n        <div\r\n          as={MessageInput}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            borderTop: \"1px dashed #d1dbe4\",\r\n          }}\r\n        >\r\n          <MessageInput\r\n            ref={inputRef}\r\n            onChange={(msg) => setMsgInputValue(msg)}\r\n            value={msgInputValue}\r\n            sendButton={false}\r\n            attachButton={false}\r\n            onSend={handleSend}\r\n            style={{\r\n              flexGrow: 1,\r\n              borderTop: 0,\r\n              flexShrink: \"initial\",\r\n            }}\r\n          />\r\n          <SendButton\r\n            onClick={() => handleSend(msgInputValue)}\r\n            disabled={msgInputValue.length === 0}\r\n            style={{\r\n              fontSize: \"1.2em\",\r\n              marginLeft: 0,\r\n              paddingLeft: \"0.2em\",\r\n              paddingRight: \"0.2em\",\r\n            }}\r\n          />\r\n          <AttachmentButton\r\n            style={{\r\n              fontSize: \"1.2em\",\r\n              paddingLeft: \"0.2em\",\r\n              paddingRight: \"0.2em\",\r\n            }}\r\n          />\r\n          <InfoButton\r\n            onClick={() => alert(\"Important message!\")}\r\n            style={{\r\n              fontSize: \"1.2em\",\r\n              paddingLeft: \"0.2em\",\r\n              paddingRight: \"0.2em\",\r\n            }}\r\n          />\r\n        </div>\r\n      </ChatContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Navigation.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\WorldMap.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMap.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",["90","91","92","93"],"import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { LocalMap } from \"..\";\r\n\r\nconst LocalMapPage = () => {\r\n\r\n  return (\r\n    //   <LayoutOne>\r\n              <LocalMap/>\r\n    //   </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default LocalMapPage;\r\n\r\n\r\n// import React from \"react\";\r\n// import { LocalMap } from \"..\";\r\n// \r\n// export default function Local() {\r\n    // return(<>\r\n        {/* <LocalMap/> */}\r\n    {/* </>) */}\r\n// }","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat3.js",["94"],"import React from \"react\";\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  InfoButton,\r\n  MessageInput,\r\n  Avatar,\r\n  ConversationHeader,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function Chat3() {\r\n  const inputRef = useRef();\r\n  const [msgInputValue, setMsgInputValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = (message) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        message,\r\n        direction: \"outgoing\",\r\n      },\r\n    ]);\r\n    setMsgInputValue(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"800px\",\r\n        width: \"500px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <MainContainer responsive>\r\n        <ChatContainer>\r\n          <ConversationHeader>\r\n            <ConversationHeader.Back />\r\n            <Avatar src={require(\"./data/icon.png\").default} name=\"Cofin\" />\r\n            <ConversationHeader.Content userName=\"Cofin\" />\r\n            <ConversationHeader.Actions>\r\n              <VoiceCallButton />\r\n              <VideoCallButton />\r\n              <InfoButton />\r\n            </ConversationHeader.Actions>\r\n          </ConversationHeader>\r\n          <MessageList>\r\n            <Message\r\n              model={{\r\n                message: \"Hello my friend\",\r\n                sentTime: \"15 mins ago\",\r\n                sender: \"Emily\",\r\n                direction: \"incoming\",\r\n                position: \"single\",\r\n              }}\r\n            >\r\n              <Avatar src={require(\"./data/icon.png\").default} name={\"Emily\"} />\r\n            </Message>\r\n            {messages.map((m, i) => (\r\n              <Message key={i} model={m} />\r\n            ))}\r\n          </MessageList>\r\n          <div\r\n            as={MessageInput}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              borderTop: \"1px dashed #d1dbe4\",\r\n            }}\r\n          >\r\n            <MessageInput\r\n              ref={inputRef}\r\n              onChange={(msg) => setMsgInputValue(msg)}\r\n              value={msgInputValue}\r\n              sendButton={false}\r\n              attachButton={false}\r\n              onSend={handleSend}\r\n              style={{\r\n                flexGrow: 1,\r\n                borderTop: 0,\r\n                flexShrink: \"initial\",\r\n              }}\r\n            />\r\n          </div>\r\n        </ChatContainer>\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":4,"column":3,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":10,"column":3,"nodeType":"103","messageId":"104","endLine":10,"endColumn":9},{"ruleId":"101","severity":1,"message":"107","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":17},{"ruleId":"101","severity":1,"message":"108","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":22,"column":9,"nodeType":"111","messageId":"112","endLine":22,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":23,"column":5,"nodeType":"111","messageId":"112","endLine":23,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'MainContainer' is defined but never used.","'Avatar' is defined but never used.","'PropTypes' is defined but never used.","'Fragment' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]