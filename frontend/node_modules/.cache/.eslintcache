[{"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\index.js":"1","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\App.js":"2","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\app\\store.js":"4","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterSlice.js":"5","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterAPI.js":"6","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\index.js":"7","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\index.js":"8","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\index.js":"9","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Home.js":"10","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Navigation.js":"11","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js":"12","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat.js":"13","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\Geolocation.js":"14","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMap.js":"15","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\Options.js":"16","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js":"17","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"18","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"19","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js":"20","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js":"21","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\World.js":"22"},{"size":725,"mtime":1635827534687,"results":"23","hashOfConfig":"24"},{"size":914,"mtime":1637126181050,"results":"25","hashOfConfig":"24"},{"size":5151,"mtime":1635827534687,"results":"26","hashOfConfig":"24"},{"size":409,"mtime":1637116869535,"results":"27","hashOfConfig":"24"},{"size":2819,"mtime":1635827534684,"results":"28","hashOfConfig":"24"},{"size":202,"mtime":1635827534684,"results":"29","hashOfConfig":"24"},{"size":144,"mtime":1635827534682,"results":"30","hashOfConfig":"24"},{"size":136,"mtime":1636442062994,"results":"31","hashOfConfig":"24"},{"size":702,"mtime":1637133059330,"results":"32","hashOfConfig":"24"},{"size":125,"mtime":1635838815505,"results":"33","hashOfConfig":"24"},{"size":564,"mtime":1636442072731,"results":"34","hashOfConfig":"24"},{"size":2651,"mtime":1636442218940,"results":"35","hashOfConfig":"24"},{"size":4046,"mtime":1636530208319,"results":"36","hashOfConfig":"24"},{"size":787,"mtime":1636347538153,"results":"37","hashOfConfig":"24"},{"size":3159,"mtime":1636619338493,"results":"38","hashOfConfig":"24"},{"size":571,"mtime":1636341415625,"results":"39","hashOfConfig":"24"},{"size":512,"mtime":1636346023973,"results":"40","hashOfConfig":"24"},{"size":263,"mtime":1636436146772,"results":"41","hashOfConfig":"24"},{"size":145,"mtime":1637128714033,"results":"42","hashOfConfig":"24"},{"size":577,"mtime":1637128271965,"results":"43","hashOfConfig":"24"},{"size":1700,"mtime":1637134116951,"results":"44","hashOfConfig":"24"},{"size":1400,"mtime":1637133255102,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dkgapf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\index.js",[],["96","97"],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\App.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\app\\store.js",["98"],"import {\r\n  configureStore,\r\n  combineReducers,  // redux의 reducer의 집합과 같다.\r\n  getDefaultMiddleware\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport { map } from 'features/map'\r\n\r\nconst rootReducer = combineReducers({map})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\r\n});\r\n","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\counter\\counterAPI.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Home.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\common\\components\\Navigation.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js",["99"],"import React from \"react\";\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  InfoButton, \r\n  MessageInput,\r\n  Avatar,\r\n  ConversationHeader,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function Chat2() {\r\n  const inputRef = useRef();\r\n  const [msgInputValue, setMsgInputValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = (message) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        message,\r\n        direction: \"outgoing\",\r\n      },\r\n    ]);\r\n    setMsgInputValue(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"800px\",\r\n        width: \"500px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <MainContainer responsive>\r\n        <ChatContainer>\r\n          <ConversationHeader>\r\n            <ConversationHeader.Back />\r\n            <Avatar src={require(\"./data/icon.png\").default} name=\"Cofin\" />\r\n            <ConversationHeader.Content userName=\"Cofin\" />\r\n            <ConversationHeader.Actions>\r\n              <VoiceCallButton />\r\n              <VideoCallButton />\r\n              <InfoButton />\r\n            </ConversationHeader.Actions>\r\n          </ConversationHeader>\r\n          <MessageList>\r\n            <Message\r\n              model={{\r\n                message: \"Hello my friend\",\r\n                sentTime: \"15 mins ago\",\r\n                sender: \"Cofin\",\r\n                direction: \"incoming\",\r\n                position: \"single\",\r\n              }}\r\n            >\r\n              <Avatar src={require(\"./data/icon.png\").default} name={\"Cofin\"} />\r\n            </Message>\r\n            {messages.map((m, i) => (\r\n              <Message key={i} model={m} />\r\n            ))}\r\n          </MessageList>\r\n          <div\r\n            as={MessageInput}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              borderTop: \"1px dashed #d1dbe4\",\r\n            }}\r\n          >\r\n            <MessageInput\r\n              ref={inputRef}\r\n              onChange={(msg) => setMsgInputValue(msg)}\r\n              value={msgInputValue}\r\n              // sendButton={false}\r\n              attachButton={false}\r\n              onSend={handleSend}\r\n              style={{\r\n                flexGrow: 1,\r\n                borderTop: 0,\r\n                flexShrink: \"initial\",\r\n              }}\r\n            />\r\n          </div>\r\n        </ChatContainer>\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\chatbot\\components\\Chat.js",["100"],"import ChatBot from \"react-simple-chatbot\";\r\nimport React, { Component } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        background: \"#f5f8fb\",\r\n        fontFamily: \"Helvetica Neue\",\r\n        headerBgColor: \"#EF6C00\",\r\n        headerFontColor: \"#fff\",\r\n        headerFontSize: \"15px\",\r\n        botBubbleColor: \"#EF6C00\",\r\n        botFontColor: \"#fff\",\r\n        userBubbleColor: \"#fff\",\r\n        userFontColor: \"#4a4a4a\",\r\n      }}\r\n    >\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: 'q-name',\r\n            message: 'What is your name??',\r\n            trigger: 'name',\r\n          },\r\n          {\r\n            id: 'name',\r\n            user: true,\r\n            trigger: 'a-name'\r\n          },\r\n          {\r\n            id: 'a-name',\r\n            message: 'Hi {previousValue}, nice to meet you!',\r\n            trigger: 'q-hobby'\r\n          },\r\n          {\r\n              id: 'q-hobby',\r\n              message: 'What is your hobby?',\r\n              trigger: 'hobby'\r\n          },\r\n          {\r\n              id: 'hobby',\r\n              user: true,\r\n              trigger: 'a-hobby'\r\n            },\r\n          {\r\n            id: 'a-hobby',\r\n            message: \"{previousValue}? That's cool!\",\r\n            trigger: 'q-submit'\r\n          },\r\n          {\r\n            id: \"q-submit\",\r\n            message: \"Can I remember you?\",\r\n            trigger: \"submit\",\r\n          },\r\n          {\r\n            id: \"submit\",\r\n            options: [\r\n              { value: \"y\", label: \"Yes\", trigger: \"end-message\" },\r\n              { value: \"n\", label: \"No\", trigger: \"no-submit\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"no-submit\",\r\n            message: \"Your information was not submitted.\",\r\n            end: true,\r\n          },\r\n          {\r\n            id: \"end-message\",\r\n            component: <Post />,\r\n            asMessage: true,\r\n            trigger: 'q-re-start'\r\n          },\r\n          {\r\n            id: 'q-re-start',\r\n            message: \"Do you want to do it again?\",\r\n            trigger: 're-start'\r\n          },\r\n          {\r\n            id: 're-start',\r\n            options: [\r\n              { value: 'y', label: \"Yes\", trigger: \"q-name\" },\r\n              { value: 'n', label: \"No\", trigger: \"stop\" },\r\n            ],\r\n          },\r\n          {\r\n            id: 'stop',\r\n            message: 'Ok! bye~',\r\n            end: true\r\n          }\r\n        ]}\r\n        botAvatar={require(\"./data/icon.png\").default}\r\n        userAvatar={require(\"./data/user.png\").default}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\n// export function Post(props) {\r\n//     const { steps } = props;\r\n//     const { submit, name, hobby } = steps;\r\n//     const state = { submit, name, hobby };\r\n//     // const keys = Object.getOwnPropertyNames(state)\r\n//     // console.log(keys)\r\n//     const userObject = {\r\n//       submit: state.submit.value,\r\n//       name: state.name.value,\r\n//       hoby: state.hobby.value,\r\n//     };\r\n//     console.log(`data: ${JSON.stringify(userObject)}`)\r\n//     return (\r\n//       <>\r\n//         <div>Thank you! I'll remember you.</div>\r\n//       </>\r\n//     );\r\n// }\r\n\r\n\r\nexport class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { submit, name, hobby } = steps;\r\n\r\n    this.state = { submit, name, hobby };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userObject = {\r\n      submit: this.state.submit.value,\r\n      name: this.state.name.value,\r\n      hoby: this.state.hobby.value,\r\n    };\r\n    console.log(`data: ${JSON.stringify(userObject)}`);\r\n    // axios.post(`/api`, userObject)\r\n    // .then(res => {\r\n    //     console.log(res.status)\r\n    // }).catch(function(error) {\r\n    //     console.log(error);\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>Thank you! I'll remember you.</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\Geolocation.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMap.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\Options.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js",["101"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8000'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst world = () => axios.get(`${SERVER}/api/map/world`)\r\nconst medPoint = x => axios.get(`${SERVER}/api/map/med-point`, JSON.stringify(x),{headers})\r\nconst medPointList = x => axios.post(`${SERVER}/api/map/med-point-list`, JSON.stringify(x),{headers})\r\nconst cases = x => axios.post(`${SERVER}/api/map/cases`, JSON.stringify(x),{headers})\r\n\r\nexport default {\r\n  world,\r\n  medPoint,\r\n  medPointList,\r\n  cases,\r\n}","C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js",[],"C:\\Users\\ASUS\\ho\\TeamProject\\organ\\frontend\\src\\features\\map\\components\\World.js",["102"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel = 0.1 + (1.0 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={maps.map(x => {return {country: x.short_name, value: parseInt(x.cases)}})} \r\n            frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>) \r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":13,"column":1,"nodeType":"115","endLine":18,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":12,"column":7,"nodeType":"118","endLine":12,"endColumn":9,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'render' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [dispatch]",{"range":"125","text":"126"},[436,438],"[dispatch]"]