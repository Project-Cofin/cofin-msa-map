[{"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\index.js":"1","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\App.js":"2","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\app\\store.js":"4","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\index.js":"5","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\index.js":"6","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\index.js":"7","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Home.js":"8","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Navigation.js":"9","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js":"10","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat.js":"11","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMap.js":"12","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js":"13","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Geolocation.js":"14","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Options.js":"15","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"16","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js":"17","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\World.js":"18","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"19","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js":"20"},{"size":725,"mtime":1637054563490,"results":"21","hashOfConfig":"22"},{"size":914,"mtime":1637054563366,"results":"23","hashOfConfig":"22"},{"size":5151,"mtime":1637054563494,"results":"24","hashOfConfig":"22"},{"size":409,"mtime":1637135068841,"results":"25","hashOfConfig":"22"},{"size":144,"mtime":1637054563418,"results":"26","hashOfConfig":"22"},{"size":136,"mtime":1637054563396,"results":"27","hashOfConfig":"22"},{"size":702,"mtime":1637135068856,"results":"28","hashOfConfig":"22"},{"size":125,"mtime":1637054563412,"results":"29","hashOfConfig":"22"},{"size":564,"mtime":1637054563416,"results":"30","hashOfConfig":"22"},{"size":2651,"mtime":1637054563379,"results":"31","hashOfConfig":"22"},{"size":4046,"mtime":1637054563375,"results":"32","hashOfConfig":"22"},{"size":3860,"mtime":1637304385007,"results":"33","hashOfConfig":"22"},{"size":512,"mtime":1637054563449,"results":"34","hashOfConfig":"22"},{"size":1159,"mtime":1637306416702,"results":"35","hashOfConfig":"22"},{"size":571,"mtime":1637054563452,"results":"36","hashOfConfig":"22"},{"size":263,"mtime":1637306046562,"results":"37","hashOfConfig":"22"},{"size":1714,"mtime":1637306064247,"results":"38","hashOfConfig":"22"},{"size":1394,"mtime":1637302487769,"results":"39","hashOfConfig":"22"},{"size":145,"mtime":1637135068856,"results":"40","hashOfConfig":"22"},{"size":552,"mtime":1637303305637,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1itd7p0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\index.js",[],["87","88"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\App.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\app\\store.js",["89"],"import {\r\n  configureStore,\r\n  combineReducers,  // redux의 reducer의 집합과 같다.\r\n  getDefaultMiddleware\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport { map } from 'features/map'\r\n\r\nconst rootReducer = combineReducers({map})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\r\n});\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Home.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\common\\components\\Navigation.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat2.js",["90"],"import React from \"react\";\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  InfoButton, \r\n  MessageInput,\r\n  Avatar,\r\n  ConversationHeader,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function Chat2() {\r\n  const inputRef = useRef();\r\n  const [msgInputValue, setMsgInputValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = (message) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        message,\r\n        direction: \"outgoing\",\r\n      },\r\n    ]);\r\n    setMsgInputValue(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"800px\",\r\n        width: \"500px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <MainContainer responsive>\r\n        <ChatContainer>\r\n          <ConversationHeader>\r\n            <ConversationHeader.Back />\r\n            <Avatar src={require(\"./data/icon.png\").default} name=\"Cofin\" />\r\n            <ConversationHeader.Content userName=\"Cofin\" />\r\n            <ConversationHeader.Actions>\r\n              <VoiceCallButton />\r\n              <VideoCallButton />\r\n              <InfoButton />\r\n            </ConversationHeader.Actions>\r\n          </ConversationHeader>\r\n          <MessageList>\r\n            <Message\r\n              model={{\r\n                message: \"Hello my friend\",\r\n                sentTime: \"15 mins ago\",\r\n                sender: \"Cofin\",\r\n                direction: \"incoming\",\r\n                position: \"single\",\r\n              }}\r\n            >\r\n              <Avatar src={require(\"./data/icon.png\").default} name={\"Cofin\"} />\r\n            </Message>\r\n            {messages.map((m, i) => (\r\n              <Message key={i} model={m} />\r\n            ))}\r\n          </MessageList>\r\n          <div\r\n            as={MessageInput}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              borderTop: \"1px dashed #d1dbe4\",\r\n            }}\r\n          >\r\n            <MessageInput\r\n              ref={inputRef}\r\n              onChange={(msg) => setMsgInputValue(msg)}\r\n              value={msgInputValue}\r\n              // sendButton={false}\r\n              attachButton={false}\r\n              onSend={handleSend}\r\n              style={{\r\n                flexGrow: 1,\r\n                borderTop: 0,\r\n                flexShrink: \"initial\",\r\n              }}\r\n            />\r\n          </div>\r\n        </ChatContainer>\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\chatbot\\components\\Chat.js",["91"],"import ChatBot from \"react-simple-chatbot\";\r\nimport React, { Component } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        background: \"#f5f8fb\",\r\n        fontFamily: \"Helvetica Neue\",\r\n        headerBgColor: \"#EF6C00\",\r\n        headerFontColor: \"#fff\",\r\n        headerFontSize: \"15px\",\r\n        botBubbleColor: \"#EF6C00\",\r\n        botFontColor: \"#fff\",\r\n        userBubbleColor: \"#fff\",\r\n        userFontColor: \"#4a4a4a\",\r\n      }}\r\n    >\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: 'q-name',\r\n            message: 'What is your name??',\r\n            trigger: 'name',\r\n          },\r\n          {\r\n            id: 'name',\r\n            user: true,\r\n            trigger: 'a-name'\r\n          },\r\n          {\r\n            id: 'a-name',\r\n            message: 'Hi {previousValue}, nice to meet you!',\r\n            trigger: 'q-hobby'\r\n          },\r\n          {\r\n              id: 'q-hobby',\r\n              message: 'What is your hobby?',\r\n              trigger: 'hobby'\r\n          },\r\n          {\r\n              id: 'hobby',\r\n              user: true,\r\n              trigger: 'a-hobby'\r\n            },\r\n          {\r\n            id: 'a-hobby',\r\n            message: \"{previousValue}? That's cool!\",\r\n            trigger: 'q-submit'\r\n          },\r\n          {\r\n            id: \"q-submit\",\r\n            message: \"Can I remember you?\",\r\n            trigger: \"submit\",\r\n          },\r\n          {\r\n            id: \"submit\",\r\n            options: [\r\n              { value: \"y\", label: \"Yes\", trigger: \"end-message\" },\r\n              { value: \"n\", label: \"No\", trigger: \"no-submit\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"no-submit\",\r\n            message: \"Your information was not submitted.\",\r\n            end: true,\r\n          },\r\n          {\r\n            id: \"end-message\",\r\n            component: <Post />,\r\n            asMessage: true,\r\n            trigger: 'q-re-start'\r\n          },\r\n          {\r\n            id: 'q-re-start',\r\n            message: \"Do you want to do it again?\",\r\n            trigger: 're-start'\r\n          },\r\n          {\r\n            id: 're-start',\r\n            options: [\r\n              { value: 'y', label: \"Yes\", trigger: \"q-name\" },\r\n              { value: 'n', label: \"No\", trigger: \"stop\" },\r\n            ],\r\n          },\r\n          {\r\n            id: 'stop',\r\n            message: 'Ok! bye~',\r\n            end: true\r\n          }\r\n        ]}\r\n        botAvatar={require(\"./data/icon.png\").default}\r\n        userAvatar={require(\"./data/user.png\").default}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\n// export function Post(props) {\r\n//     const { steps } = props;\r\n//     const { submit, name, hobby } = steps;\r\n//     const state = { submit, name, hobby };\r\n//     // const keys = Object.getOwnPropertyNames(state)\r\n//     // console.log(keys)\r\n//     const userObject = {\r\n//       submit: state.submit.value,\r\n//       name: state.name.value,\r\n//       hoby: state.hobby.value,\r\n//     };\r\n//     console.log(`data: ${JSON.stringify(userObject)}`)\r\n//     return (\r\n//       <>\r\n//         <div>Thank you! I'll remember you.</div>\r\n//       </>\r\n//     );\r\n// }\r\n\r\n\r\nexport class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { submit, name, hobby } = steps;\r\n\r\n    this.state = { submit, name, hobby };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userObject = {\r\n      submit: this.state.submit.value,\r\n      name: this.state.name.value,\r\n      hoby: this.state.hobby.value,\r\n    };\r\n    console.log(`data: ${JSON.stringify(userObject)}`);\r\n    // axios.post(`/api`, userObject)\r\n    // .then(res => {\r\n    //     console.log(res.status)\r\n    // }).catch(function(error) {\r\n    //     console.log(error);\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>Thank you! I'll remember you.</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMap.js",["92","93","94"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\LocalMapInfo.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Geolocation.js",["95","96"],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\Options.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapSlice.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\components\\World.js",["97"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel = 0.1 + (1.0 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={maps.map(x => {return {country: x.meta, value: parseInt(x.cases)}})} \r\n            frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>) \r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`","C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\bitcamp\\ai-work\\cofin-msa-organ\\frontend\\src\\features\\map\\reducer\\mapAPI.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"110","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":83,"column":6,"nodeType":"113","endLine":83,"endColumn":8,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"110","line":3,"column":23,"nodeType":"105","messageId":"106","endLine":3,"endColumn":32},{"ruleId":"111","severity":1,"message":"115","line":24,"column":7,"nodeType":"113","endLine":24,"endColumn":9,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"115","line":12,"column":7,"nodeType":"113","endLine":12,"endColumn":9,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":1,"nodeType":"120","endLine":18,"endColumn":2},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'render' is defined but never used.","'useDispatch' is defined but never used.","'medPoints' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'med_points'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["124"],["125"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},"Update the dependencies array to be: [med_points]",{"range":"131","text":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},{"range":"135","text":"134"},[3205,3207],"[med_points]",[1076,1078],"[dispatch]",[436,438]]